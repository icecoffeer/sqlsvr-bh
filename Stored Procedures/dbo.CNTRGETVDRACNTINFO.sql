SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS OFF
GO
CREATE PROCEDURE [dbo].[CNTRGETVDRACNTINFO] (
	@NUM			VARCHAR(14), /*单号*/
	@VDRGID		INT,/*供应商GID*/
	@FROMDATE		DATETIME,  /*开始日期*/
	@TODATE		DATETIME,  /*结束日期*/
	@DEPT		VARCHAR(10), /*部门*/
	@TFROMDATE DATETIME OUTPUT, /*实际开始日期 */
        @TTODATE DATETIME OUTPUT /*实际结束日期 */
 )
AS
BEGIN
  DECLARE @SETTLE INT --期号
  DECLARE @STYPE INT --供应商类型：经销、代销、联销
  DECLARE @NO INT, @SUB VARCHAR(30), @FLAG INT
  DECLARE @VALUE VARCHAR(20)  --计算结果
  DECLARE @DMONEY MONEY, @AMONEY MONEY, @BMONEY MONEY, @INVPRC MONEY
  DECLARE @RTN INT
  SELECT @STYPE = SALE FROM GOODSH WHERE BILLTO = @VDRGID
  IF @@ROWCOUNT = 0
    RETURN 1
  DECLARE @SettleDeptMethod	INT
  EXEC OPTREADINT 0,'AutoGetSettleDeptMethod',1,@SettleDeptMethod OUTPUT
  IF @TFROMDATE > GETDATE()
    RETURN 2
  EXEC CNTRGETDATE @FROMDATE, @TFROMDATE OUTPUT
  SELECT @TTODATE = GETDATE()
  IF @TODATE > GETDATE()
    EXEC CNTRGETDATE @TTODATE, @TTODATE OUTPUT
  ELSE
    EXEC CNTRGETDATE @TODATE, @TTODATE OUTPUT
  SELECT @SETTLE = MIN(NO) FROM MONTHSETTLE WHERE BEGINDATE > @TFROMDATE AND ENDDATE <= @TTODATE
  IF @@ROWCOUNT = 0
    SELECT @SETTLE = 1
  DELETE FROM CNTRACNTINFO WHERE NUM = @NUM
  DECLARE ACNT_INFO CURSOR FOR
    SELECT [NO], SUBJECT, FLAG FROM CNTRACNTINFOCFG
  OPEN ACNT_INFO
  FETCH NEXT FROM ACNT_INFO INTO @NO, @SUB, @FLAG
  WHILE @@fetch_status = 0
  BEGIN
    IF @FLAG = 0
    BEGIN
      FETCH NEXT FROM ACNT_INFO INTO @NO, @SUB, @FLAG
      CONTINUE
    END
    IF @NO = 1  --期初库存金额（售价）,以下计算大多都要区分供应商类型
    BEGIN    
      IF @DEPT = '' OR @DEPT IS NULL 
        SELECT @VALUE = CAST(SUM(CT * FRTLPRC) AS VARCHAR(20)) FROM INVDRPT, GOODSH WHERE 
           ADATE = @TFROMDATE AND BGDGID = GID 
            AND BILLTO = @VDRGID
      ELSE BEGIN
	IF @SettleDeptMethod = 1 
	BEGIN
		SELECT @VALUE = CAST(SUM(CT * FRTLPRC) AS VARCHAR(20)) FROM INVDRPT, GOODSH WHERE 
           	ADATE = @TFROMDATE AND BGDGID = GID AND BILLTO = @VDRGID 
        	AND F1 IN (SELECT DEPTCODE FROM SETTLEDEPTDEPT WHERE CODE = @DEPT)
        END
	IF @SettleDeptMethod = 2
	BEGIN
		SELECT @VALUE = CAST(SUM(CT * FRTLPRC) AS VARCHAR(20)) FROM INVDRPT, GOODSH WHERE 
           	ADATE = @TFROMDATE AND BGDGID = GID AND BILLTO = @VDRGID 
        END
      END
      IF @@ROWCOUNT = 0 OR @VALUE IS NULL
        SELECT @VALUE = '0.00'
    END
    ELSE IF @NO = 2  --期初库存金额（进价）,以下计算大多都要区分供应商类型
    BEGIN    
      IF @DEPT = '' OR @DEPT IS NULL 
        SELECT @VALUE = CAST(SUM(CT * FLSTINPRC) AS VARCHAR(20)) FROM INVDRPT, GOODSH WHERE 
           ADATE = @TFROMDATE AND BGDGID = GID 
            AND BILLTO = @VDRGID
      ELSE BEGIN
	IF @SettleDeptMethod = 1 
	BEGIN
	        SELECT @VALUE = CAST(SUM(CT * FLSTINPRC) AS VARCHAR(20)) FROM INVDRPT, GOODSH WHERE 
           	ADATE = @TFROMDATE AND BGDGID = GID AND BILLTO = @VDRGID 
        	AND F1 IN (SELECT DEPTCODE FROM SETELLEDEPTDEPT WHERE CODE = @DEPT)
        END
	IF @SettleDeptMethod = 2
	BEGIN
	        SELECT @VALUE = CAST(SUM(CT * FLSTINPRC) AS VARCHAR(20)) FROM INVDRPT, GOODSH WHERE 
           	ADATE = @TFROMDATE AND BGDGID = GID AND BILLTO = @VDRGID 
        END
      END
      IF @@ROWCOUNT = 0 OR @VALUE IS NULL
        SELECT @VALUE = '0.00'
    END
    ELSE IF @NO = 3  -- 期初未结货款
    BEGIN
      EXEC @RTN = CNTRINFOGETUNPAY @TFROMDATE, @STYPE, @VDRGID, @DEPT, @VALUE OUTPUT
    END
    ELSE IF @NO = 4  --结账期销售额
    BEGIN
      IF @DEPT = '' OR @DEPT IS NULL 
        SELECT @VALUE = CAST(SUM(DT2) AS VARCHAR(20)) FROM VDRDRPT WHERE BVDRGID = @VDRGID
          AND ADATE >= @TFROMDATE AND ADATE <= @TTODATE
      ELSE BEGIN
	IF @SettleDeptMethod = 1 
	BEGIN
	        SELECT @VALUE = CAST(SUM(DT2) AS VARCHAR(20)) FROM VDRDRPT, GOODSH WHERE BVDRGID = @VDRGID
          	AND ADATE >= @TFROMDATE AND ADATE <= @TTODATE AND BVDRGID = GID 
        	AND F1 IN (SELECT DEPTCODE FROM SETELLEDEPTDEPT WHERE CODE = @DEPT)
        END
	IF @SettleDeptMethod = 2
	BEGIN
	        SELECT @VALUE = CAST(SUM(DT2) AS VARCHAR(20)) FROM VDRDRPT, GOODSH WHERE BVDRGID = @VDRGID
          	AND ADATE >= @TFROMDATE AND ADATE <= @TTODATE AND BVDRGID = GID 
        END
      END
      IF @@ROWCOUNT = 0 OR @VALUE IS NULL
        SELECT @VALUE = '0.00' 
    END
    ELSE IF @NO = 5  --结账期销售成本
    BEGIN
      IF @DEPT = '' OR @DEPT IS NULL 
        SELECT @VALUE = CAST(SUM(DI2) AS VARCHAR(20)) FROM VDRDRPT WHERE BVDRGID = @VDRGID
          AND ADATE >= @TFROMDATE AND ADATE <= @TTODATE
      ELSE BEGIN
	IF @SettleDeptMethod = 1 
	BEGIN
	        SELECT @VALUE = CAST(SUM(DI2) AS VARCHAR(20)) FROM VDRDRPT, GOODSH WHERE BVDRGID = @VDRGID
          	AND ADATE >= @TFROMDATE AND ADATE <= @TTODATE AND BVDRGID = GID 
        	AND F1 IN (SELECT DEPTCODE FROM SETELLEDEPTDEPT WHERE CODE = @DEPT)
        END
	IF @SettleDeptMethod = 2
	BEGIN
	        SELECT @VALUE = CAST(SUM(DI2) AS VARCHAR(20)) FROM VDRDRPT, GOODSH WHERE BVDRGID = @VDRGID
          	AND ADATE >= @TFROMDATE AND ADATE <= @TTODATE AND BVDRGID = GID 
        END
      END
      IF @@ROWCOUNT = 0 OR @VALUE IS NULL
        SELECT @VALUE = '0.00'      
    END
    ELSE IF @NO = 6  --结账期进货额
    BEGIN
      IF @DEPT = '' OR @DEPT IS NULL 
        SELECT @VALUE = CAST(SUM(DT1) AS VARCHAR(20)) FROM VDRDRPT WHERE BVDRGID = @VDRGID
          AND ADATE >= @TFROMDATE AND ADATE <= @TTODATE
      ELSE BEGIN
	IF @SettleDeptMethod = 1 
	BEGIN
	        SELECT @VALUE = CAST(SUM(DT1) AS VARCHAR(20)) FROM VDRDRPT, GOODSH WHERE BVDRGID = @VDRGID
          	AND ADATE >= @TFROMDATE AND ADATE <= @TTODATE AND BVDRGID = GID 
        	AND F1 IN (SELECT DEPTCODE FROM SETELLEDEPTDEPT WHERE CODE = @DEPT)
        END
	IF @SettleDeptMethod = 2
	BEGIN
	        SELECT @VALUE = CAST(SUM(DT1) AS VARCHAR(20)) FROM VDRDRPT, GOODSH WHERE BVDRGID = @VDRGID
          	AND ADATE >= @TFROMDATE AND ADATE <= @TTODATE AND BVDRGID = GID 
        END
      END
      IF @@ROWCOUNT = 0 OR @VALUE IS NULL
        SELECT @VALUE = '0.00'
    END
    ELSE IF @NO = 7  --结账期发生应结额
    BEGIN
      IF @DEPT = '' OR @DEPT IS NULL 
        SELECT @VALUE = CAST(SUM(DT3) AS VARCHAR(20)) FROM VDRDRPT WHERE BVDRGID = @VDRGID
          AND ADATE >= @TFROMDATE AND ADATE <= @TTODATE
      ELSE BEGIN
	IF @SettleDeptMethod = 1 
	BEGIN
	        SELECT @VALUE = CAST(SUM(DT3) AS VARCHAR(20)) FROM VDRDRPT, GOODSH WHERE BVDRGID = @VDRGID
          	AND ADATE >= @TFROMDATE AND ADATE <= @TTODATE AND BVDRGID = GID 
        	AND F1 IN (SELECT DEPTCODE FROM SETELLEDEPTDEPT WHERE CODE = @DEPT)
        END
	IF @SettleDeptMethod = 2
	BEGIN
	        SELECT @VALUE = CAST(SUM(DT3) AS VARCHAR(20)) FROM VDRDRPT, GOODSH WHERE BVDRGID = @VDRGID
          	AND ADATE >= @TFROMDATE AND ADATE <= @TTODATE AND BVDRGID = GID 
        END
      END
      IF @@ROWCOUNT = 0 OR @VALUE IS NULL
        SELECT @VALUE = '0.00'
    END
    ELSE IF @NO = 8  --结账期已结货款
    BEGIN
      IF @DEPT = '' OR @DEPT IS NULL 
        SELECT @VALUE = CAST(SUM(DT4) AS VARCHAR(20)) FROM VDRDRPT WHERE BVDRGID = @VDRGID
          AND ADATE >= @TFROMDATE AND ADATE <= @TTODATE
      ELSE BEGIN
	IF @SettleDeptMethod = 1 
	BEGIN
	        SELECT @VALUE = CAST(SUM(DT4) AS VARCHAR(20)) FROM VDRDRPT, GOODSH WHERE BVDRGID = @VDRGID
          	AND ADATE >= @TFROMDATE AND ADATE <= @TTODATE AND BVDRGID = GID 
        	AND F1 IN (SELECT DEPTCODE FROM SETELLEDEPTDEPT WHERE CODE = @DEPT)
        END
	IF @SettleDeptMethod = 2
	BEGIN
	        SELECT @VALUE = CAST(SUM(DT4) AS VARCHAR(20)) FROM VDRDRPT, GOODSH WHERE BVDRGID = @VDRGID
          	AND ADATE >= @TFROMDATE AND ADATE <= @TTODATE AND BVDRGID = GID 
        END
      END
      IF @@ROWCOUNT = 0 OR @VALUE IS NULL
        SELECT @VALUE = '0.00'
    END
    ELSE IF @NO = 9  --结账期已付款
    BEGIN
      IF @DEPT = '' OR @DEPT IS NULL
        SELECT @VALUE = CAST(SUM(A.PAYTOTAL) AS VARCHAR(20)) FROM CNTRPAYCASH A, CNTRPAYCASHCHKLOG B
          WHERE A.VDRGID = @VDRGID AND A.NUM = B.NUM AND B.CHKFLAG = 900 
            AND B.ATIME >= @TFROMDATE AND B.ATIME < DATEADD(DAY, 1, @TTODATE)
      ELSE
        SELECT @VALUE = CAST(SUM(A.PAYTOTAL) AS VARCHAR(20)) FROM CNTRPAYCASH A, CNTRPAYCASHCHKLOG B
          WHERE A.VDRGID = @VDRGID AND A.DEPT = @DEPT AND A.NUM = B.NUM AND B.CHKFLAG = 900 
            AND B.ATIME >= @TFROMDATE AND B.ATIME < DATEADD(DAY, 1, @TTODATE)
      IF @@ROWCOUNT = 0 OR @VALUE IS NULL
        SELECT @VALUE = '0.00'
     END
    ELSE IF @NO = 10  --当前未收费用
    BEGIN
      IF @DEPT = '' OR @DEPT IS NULL
        SELECT @VALUE = CAST(SUM((REALAMT - PAYTOTAL) * PAYDIRECT) AS VARCHAR(20)) FROM CHGBOOK
          WHERE VENDOR = @VDRGID AND STAT = 500 AND CHKDATE <= GETDATE() AND GATHERINGMODE = '冲扣货款'
      ELSE
        SELECT @VALUE = CAST(SUM((REALAMT - PAYTOTAL) * PAYDIRECT) AS VARCHAR(20)) FROM CHGBOOK
          WHERE VENDOR = @VDRGID AND STAT = 500 AND CHKDATE <= GETDATE() 
            AND GATHERINGMODE = '冲扣货款' AND DEPT = @DEPT
      IF @@ROWCOUNT = 0 OR @VALUE IS NULL
        SELECT @VALUE = '0.00' 
    END
    ELSE IF @NO = 11  --当前压库金额
    BEGIN
      SELECT @VALUE = CAST(TOTAL AS VARCHAR(20)) FROM CNTRDPT WHERE VENDOR = @VDRGID
      IF @@ROWCOUNT = 0
        SELECT @VALUE = '0.00'
    END
    ELSE IF @NO = 12  --当前预付款
    BEGIN
      IF @DEPT = '' OR @DEPT IS NULL
        SELECT @VALUE = CAST(SUM(A.TOTAL - A.TOTALOFF) AS VARCHAR(20)) FROM CNTRPREPAY A, CNTRPREPAYCHKLOG B
          WHERE A.VENDOR = @VDRGID AND A.STAT = 900 AND A.NUM = B.NUM AND B.CHKFLAG = 900
            AND B.ATIME <= GETDATE()
      ELSE
        SELECT @VALUE = CAST(SUM(A.TOTAL - A.TOTALOFF) AS VARCHAR(20)) FROM CNTRPREPAY A, CNTRPREPAYCHKLOG B
          WHERE A.VENDOR = @VDRGID AND A.STAT = 900 AND A.NUM = B.NUM AND B.CHKFLAG = 900
            AND B.ATIME <= GETDATE() AND DEPT = @DEPT
      IF @@ROWCOUNT = 0 OR @VALUE IS NULL
        SELECT @VALUE = '0.00'
    END
    ELSE
    BEGIN
      SELECT @VALUE = '0.00' 
    END
    --如果有自定义的数据在这里继续添加，在CNTRACNTINFOCFG表要有相应的记录
    INSERT INTO CNTRACNTINFO (NUM, [NO], SUBJECT, VALUE) VALUES (@NUM, @NO, @SUB, @VALUE)
    FETCH NEXT FROM ACNT_INFO INTO @NO, @SUB, @FLAG
  END
  CLOSE ACNT_INFO
  DEALLOCATE ACNT_INFO
  IF EXISTS (SELECT 1 FROM CNTRPAYCASH WHERE NUM = @NUM)
    UPDATE CNTRPAYCASH SET ACNTCALCBGN = @TFROMDATE, ACNTCALCEND = @TTODATE, ACNTCALTIME = GETDATE()
      WHERE NUM = @NUM
  RETURN 0
END
GO
