SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
CREATE PROCEDURE [dbo].[INPRCADJNOTIFY_CHKTO80](
  @NUM	CHAR(14),
  @OPER	CHAR(30),
  @CLS	CHAR(10),
  @TOSTAT       INT,
  @MSG	VARCHAR(255) OUTPUT
)
AS
BEGIN
  DECLARE
    @BGNTIME DATETIME,
    @DIFFPROCMETHOD INT,
    @RE INT,
    @P1 CHAR(14),
    @STAT INT,
    @USERGID INT,
    @GDGID INT

  SELECT @BGNTIME = BGNTIME, @DIFFPROCMETHOD = DIFFPROCMETHOD, @STAT = STAT
  FROM INPRCADJNOTIFY(NOLOCK) WHERE NUM = @NUM

  IF @STAT <> 100 RETURN 0
  IF (@STAT = 100) AND (@BGNTIME > GETDATE()) RETURN 0
  IF @BGNTIME <= GETDATE()
  BEGIN
    IF @DIFFPROCMETHOD = 0  --一次调整
    BEGIN
      --生成商品成本调整单
      EXEC @RE = INPRCADJNOTIFY_GENGDINPRCADJ @NUM, @P1 OUTPUT, @MSG OUTPUT
      IF @RE <> 0 RETURN @RE
      --审核商品成本调整单
      EXEC @RE = GDINPRCADJ_CHECK @P1, @OPER, @CLS, 100, @MSG OUTPUT
      IF @RE <> 0 RETURN @RE
      --回写成本调整通知单反馈明细
      SELECT @USERGID = USERGID FROM SYSTEM(NOLOCK)

      UPDATE INPRCADJNOTIFYBCKDTL SET OLDPRC = G.OLDPRC, NEWPRC = G.NEWPRC, STAT = 3
      FROM GDINPRCADJDTL G(NOLOCK) WHERE G.NUM = @P1 AND G.GDGID = INPRCADJNOTIFYBCKDTL.GDGID AND STOREGID = @USERGID
        AND INPRCADJNOTIFYBCKDTL.NUM = @NUM
        AND ISNULL(G.NOTE, '') NOT LIKE '%生效失败%'

      DECLARE C_LAC1 CURSOR FOR
      SELECT GDGID
      FROM INPRCADJNOTIFYBCKDTL(NOLOCK)
      WHERE STOREGID = @USERGID AND NUM = @NUM

      OPEN C_LAC1
      FETCH NEXT FROM C_LAC1 INTO @GDGID
      WHILE @@FETCH_STATUS = 0
      BEGIN
        IF NOT EXISTS(SELECT 1 FROM GDINPRCADJDTL G(NOLOCK), INPRCADJNOTIFYBCKDTL D(NOLOCK)
          WHERE G.NUM = @P1 AND G.GDGID = D.GDGID
            AND G.GDGID = @GDGID
            AND D.STOREGID = @USERGID AND D.NUM = @NUM
            AND ISNULL(G.NOTE, '') NOT LIKE '%调整后价格高于原价格%')
        BEGIN
          UPDATE INPRCADJNOTIFYBCKDTL SET OLDPRC = G.OLDPRC, NEWPRC = G.OLDPRC, STAT = 6
          FROM GDINPRCADJDTL G(NOLOCK) WHERE G.NUM = @P1 AND G.GDGID = INPRCADJNOTIFYBCKDTL.GDGID AND STOREGID = @USERGID
            AND INPRCADJNOTIFYBCKDTL.NUM = @NUM AND G.GDGID = @GDGID
            AND ISNULL(G.NOTE, '') LIKE '%调整后价格高于原价格%'
        END

        IF NOT EXISTS(SELECT 1 FROM GDINPRCADJDTL G(NOLOCK), INPRCADJNOTIFYBCKDTL D(NOLOCK)
          WHERE G.NUM = @P1 AND G.GDGID = D.GDGID
            AND G.GDGID = @GDGID
            AND D.STOREGID = @USERGID AND D.NUM = @NUM
            AND ISNULL(G.NOTE, '') NOT LIKE '%负库存%')
        BEGIN
          UPDATE INPRCADJNOTIFYBCKDTL SET OLDPRC = G.OLDPRC, NEWPRC = G.OLDPRC, STAT = 7
          FROM GDINPRCADJDTL G(NOLOCK) WHERE G.NUM = @P1 AND G.GDGID = INPRCADJNOTIFYBCKDTL.GDGID AND STOREGID = @USERGID
            AND INPRCADJNOTIFYBCKDTL.NUM = @NUM AND G.GDGID = @GDGID
            AND ISNULL(G.NOTE, '') LIKE '%负库存%'
        END

        IF NOT EXISTS(SELECT 1 FROM GDINPRCADJDTL G(NOLOCK), INPRCADJNOTIFYBCKDTL D(NOLOCK)
          WHERE G.NUM = @P1 AND G.GDGID = D.GDGID
            AND G.GDGID = @GDGID
            AND D.STOREGID = @USERGID AND D.NUM = @NUM
            AND ISNULL(G.NOTE, '') NOT LIKE '%生效失败%')
        BEGIN
          UPDATE INPRCADJNOTIFYBCKDTL SET OLDPRC = G.OLDPRC, NEWPRC = G.OLDPRC, STAT = 7
          FROM GDINPRCADJDTL G(NOLOCK) WHERE G.NUM = @P1 AND G.GDGID = INPRCADJNOTIFYBCKDTL.GDGID AND STOREGID = @USERGID
            AND INPRCADJNOTIFYBCKDTL.NUM = @NUM AND G.GDGID = @GDGID
            AND ISNULL(G.NOTE, '') LIKE '%负库存%'
        END

        FETCH NEXT FROM C_LAC1 INTO @GDGID
      END
      CLOSE C_LAC1
      DEALLOCATE C_LAC1

      UPDATE INPRCADJNOTIFYBCKDTL SET STAT = 5, NEWPRC = OLDPRC
      WHERE NUM = @NUM AND STOREGID = @USERGID AND GDGID NOT IN (SELECT GDGID FROM GDINPRCADJDTL WHERE NUM = @P1)

      DECLARE C_LAC1 CURSOR FOR
      SELECT GDGID
      FROM INPRCADJNOTIFYBCKDTL(NOLOCK)
      WHERE STOREGID = @USERGID AND NUM = @NUM

      OPEN C_LAC1
      FETCH NEXT FROM C_LAC1 INTO @GDGID
      WHILE @@FETCH_STATUS = 0
      BEGIN
        UPDATE INPRCADJNOTIFYBCKDTL
        SET QTY = (SELECT ISNULL(SUM(QTY), 0) FROM GDINPRCADJDTL(NOLOCK) WHERE NUM = @P1 AND GDGID = @GDGID),
          AMT = (SELECT ISNULL(SUM(DIFFAMT), 0) FROM GDINPRCADJDTL(NOLOCK) WHERE NUM = @P1 AND GDGID = @GDGID),
          CNTAMT = (SELECT ISNULL(SUM(CNTAMT), 0) FROM GDINPRCADJDTL(NOLOCK) WHERE NUM = @P1 AND GDGID = @GDGID)
        WHERE STOREGID = @USERGID AND GDGID = @GDGID AND NUM = @NUM AND STAT = 3 AND DEFPRC IS NOT NULL

        UPDATE INPRCADJNOTIFYBCKDTL
        SET QTY = (SELECT ISNULL(SUM(QTY), 0) FROM GDINPRCADJDTL(NOLOCK) WHERE NUM = @P1 AND GDGID = @GDGID),
          AMT = (SELECT ISNULL(SUM(DIFFAMT), 0) FROM GDINPRCADJDTL(NOLOCK) WHERE NUM = @P1 AND GDGID = @GDGID),
          CNTAMT = (SELECT ISNULL(SUM(DIFFAMT), 0) FROM GDINPRCADJDTL(NOLOCK) WHERE NUM = @P1 AND GDGID = @GDGID)
        WHERE STOREGID = @USERGID AND GDGID = @GDGID AND NUM = @NUM AND STAT = 3 AND DIFFPRC IS NOT NULL

        UPDATE INPRCADJNOTIFYBCKDTL
        SET QTY = 0,
          AMT = 0,
          CNTAMT = 0
        WHERE STOREGID = @USERGID AND GDGID = @GDGID AND NUM = @NUM AND STAT IN (5, 6, 7)

        FETCH NEXT FROM C_LAC1 INTO @GDGID
      END
      CLOSE C_LAC1
      DEALLOCATE C_LAC1

      UPDATE INPRCADJNOTIFYBCKDTL SET CNTPRC = G.CNTINPRC, LACTIME = GETDATE()
      FROM GOODS G(NOLOCK)
      WHERE INPRCADJNOTIFYBCKDTL.GDGID = G.GID and STOREGID = @USERGID AND INPRCADJNOTIFYBCKDTL.NUM = @NUM

      IF EXISTS(SELECT 1 FROM SYSTEM(NOLOCK) WHERE USERGID <> ZBGID)  --如果门店
        UPDATE INPRCADJNOTIFY SET STAT = 1200 WHERE NUM = @NUM
    END
  END

  EXEC INPRCADJNOTIFY_ADDLOG @NUM, @TOSTAT, '生效', @OPER

  SET @MSG = '单据：' + @NUM + '生效成功'

  RETURN 0
END
GO
