SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
CREATE PROCEDURE [dbo].[DepIn_RCV](
  @BILL_ID INT,
  @SRC_ID INT,
  @OPER VARCHAR(50),
  @MSG VARCHAR(255) OUTPUT
) AS
BEGIN
  DECLARE @RCV_GID INT
  DECLARE @NET_NUM VARCHAR(14)
  DECLARE @NET_TYPE INT
  DECLARE @VRET INT
  DECLARE @STAT INT
  DECLARE @NET_VENDOR INT
  DECLARE @NET_NOTE VARCHAR(255)
  DECLARE @CFLAG INT
  DECLARE @TOTALOFF MONEY
  DECLARE @TOTAL MONEY
  DECLARE @LOC_TOTALOFF MONEY

  SELECT @RCV_GID = RCV, @NET_TYPE = TYPE, @NET_NUM = NUM, @NET_VENDOR = VENDOR,
    @NET_NOTE = NOTE, @CFLAG = CFLAG
  FROM NCNTRDPTBILL(NOLOCK) WHERE ID = @BILL_ID AND SRC = @SRC_ID
  IF @@ROWCOUNT = 0 OR @NET_NUM IS NULL
  BEGIN
    SET @MSG = '[接收]单据' +  @NET_NUM + '不存在'
    RETURN 1
  END

  IF @CFLAG = 0
  BEGIN
    IF EXISTS(SELECT 1 FROM CNTRDPTBILL(NOLOCK) WHERE NUM = @NET_NUM AND CLS = '收')
    BEGIN
      SET @MSG = '[接收]单据' +  @NET_NUM + '已经被接收'
      RETURN 3
    END
  END

  IF (SELECT MAX(USERGID) FROM FASYSTEM(NOLOCK)) <>  @RCV_GID
  BEGIN
    SET @MSG = '[接收]单据' +  @NET_NUM + '接收单位不是本单位'
    RETURN 4
  END

  IF @NET_TYPE <> 1
  BEGIN
    SET @MSG = '[接收]单据' +  @NET_NUM + '不在接收缓冲区中'
    RETURN 5
  END

  IF NOT EXISTS(SELECT 1 FROM VENDOR(NOLOCK) WHERE GID = @NET_VENDOR)
  BEGIN
    SET @MSG = '[接收]单据' +  @NET_NUM + '结算单位在本地不存在'
    RETURN 6
  END
  
  IF @CFLAG = 0
  BEGIN    
    INSERT INTO CNTRDPTBILL(NUM, CLS, VENDOR, TOTAL, TOTALOFF, STAT, VDROPER, OPER, FILLER,
      FILDATE, CHECKER, PAYER, NOTE, DEPT, STSTORE, PSR, CLECENT, SNDTIME, SRC)
    SELECT NUM, CLS, VENDOR, TOTAL, TOTALOFF, STAT, VDROPER, OPER, FILLER,
      FILDATE, CHECKER, PAYER, NOTE, DEPT, STSTORE, PSR, CLECENT, NULL, SRC
    FROM NCNTRDPTBILL(NOLOCK)
      WHERE SRC = @SRC_ID AND ID = @BILL_ID
  END ELSE
  BEGIN
    SELECT @TOTALOFF = TOTALOFF, @STAT = STAT, @TOTAL = TOTAL
  	 FROM NCNTRDPTBILL(NOLOCK)
    WHERE ID = @BILL_ID AND SRC = @SRC_ID
    SELECT @LOC_TOTALOFF = TOTALOFF
     FROM CNTRDPTBILL(NOLOCK)
    WHERE NUM = @NET_NUM AND CLS = '收'
   --计算中心接收压库金额收款单先按状态判断再按TotalOff值判断决定采用何种方式回算
    IF @STAT = 1800
    BEGIN
      IF @TOTALOFF IS NULL
      BEGIN
      --同结算中心对压库金额收款单进行收款动作的影响
        IF NOT EXISTS(SELECT 1 FROM CNTRDPT(NOLOCK) WHERE VENDOR = @NET_VENDOR)
          INSERT INTO CNTRDPT(VENDOR, TOTAL, LSTUPDTIME, LSTUPDCLS, LSTUPDNUM)
          VALUES (@NET_VENDOR, @TOTAL, GETDATE(), '压库金额收款单', @NET_NUM)
        ELSE
          UPDATE CNTRDPT SET
            TOTAL = TOTAL + @TOTAL,
            LSTUPDTIME = GETDATE(),
            LSTUPDCLS = '压库金额付款单',
            LSTUPDNUM = @NET_NUM
          WHERE VENDOR = @NET_VENDOR
      END ELSE
      BEGIN
      ----更新压库金额收款单状态为已收货
        UPDATE CNTRDPTBILL SET TOTALOFF = TOTALOFF + @TOTALOFF - @LOC_TOTALOFF, STAT = @STAT
      	 WHERE NUM = @NET_NUM AND CLS = '收'

      	IF NOT EXISTS(SELECT 1 FROM CNTRDPT(NOLOCK) WHERE VENDOR = @NET_VENDOR)
          INSERT INTO CNTRDPT(VENDOR, TOTAL, LSTUPDTIME, LSTUPDCLS, LSTUPDNUM)
          VALUES (@NET_VENDOR, @LOC_TOTALOFF - @TOTALOFF, GETDATE(), '付款单', @NET_NUM)
        ELSE
          UPDATE CNTRDPT SET
            TOTAL = TOTAL + @LOC_TOTALOFF - @TOTALOFF,
            LSTUPDTIME = GETDATE(),
            LSTUPDCLS = '付款单',
            LSTUPDNUM = @NET_NUM
          WHERE VENDOR = @NET_VENDOR
      END
    END ELSE
    BEGIN
    --更新压库金额收款单状态为已退款
      UPDATE CNTRDPTBILL SET TOTALOFF = @TOTAL, STAT = @STAT
       WHERE NUM = @NET_NUM AND CLS = '收'

      IF NOT EXISTS(SELECT 1 FROM CNTRDPT(NOLOCK) WHERE VENDOR = @NET_VENDOR)
        INSERT INTO CNTRDPT(VENDOR, TOTAL, LSTUPDTIME, LSTUPDCLS, LSTUPDNUM)
        VALUES (@NET_VENDOR, @LOC_TOTALOFF - @TOTALOFF, GETDATE(), '付款单', @NET_NUM)
      ELSE
        UPDATE CNTRDPT SET
          TOTAL = TOTAL + @LOC_TOTALOFF - @TOTALOFF,
          LSTUPDTIME = GETDATE(),
          LSTUPDCLS = '付款单',
          LSTUPDNUM = @NET_NUM
        WHERE VENDOR = @NET_VENDOR
    END
  END
  DELETE FROM NCNTRDPTBILL WHERE ID = @BILL_ID AND SRC = @SRC_ID
  UPDATE CNTRDPTBILL SET NOTE = @NET_NOTE WHERE NUM = @NET_NUM AND CLS = '收'
    
  SET @MSG = '单据：' + @NET_NUM + '接收成功' + @MSG
  
  RETURN 0
END
GO
