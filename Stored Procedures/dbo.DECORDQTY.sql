SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
CREATE PROCEDURE [dbo].[DECORDQTY]
  @TYPE CHAR(10),
  @CLS CHAR(10),
  @NUM CHAR(10)
AS
BEGIN
  DECLARE
    @DECORDQTY MONEY, @STORE INT, @GDGID INT, @WRH INT, @ORDNUM CHAR(10), @CLRORDQTY INT, @ORDLINE int,
    @ordqty money, @arvqty money, @d_qty money

	IF @TYPE = 'STKIN' --自营进
	BEGIN
  	SELECT @ORDNUM = ORDNUM, @CLRORDQTY = CLRORDQTY FROM STKIN where CLS = @CLS and NUM = @NUM  --获取定单号和清空在单量标识
  	IF @CLRORDQTY = 1   --清空在单量
	  BEGIN
	  	DECLARE C_ORD CURSOR FOR
		  SELECT GDGID, WRH, QTY
		  	FROM STKINDTL(NOLOCK) WHERE NUM = @NUM AND CLS = @CLS order by LINE
		  OPEN C_ORD
		  FETCH NEXT FROM C_ORD INTO @GDGID, @WRH, @d_qty
		  WHILE @@FETCH_STATUS = 0
		  BEGIN
		    SELECT @STORE = NULL    /* 如果这个仓位是一个门店 */
		    SELECT @STORE = GID FROM STORE WHERE GID = @WRH
		    IF @STORE IS NULL SELECT @STORE = USERGID FROM SYSTEM
			SELECT @DECORDQTY = ISNULL(ORDQTY,0) FROM INV WHERE STORE = @STORE AND WRH = @WRH AND GDGID = @GDGID
			IF @DECORDQTY < 0 SET @DECORDQTY = 0
			UPDATE STKINDTL SET DECORDQTY = @DECORDQTY WHERE NUM = @NUM AND CLS = @CLS AND gdgid = @gdgid
		    UPDATE INV SET ORDQTY = 0 WHERE STORE = @STORE AND WRH = @WRH AND GDGID = @GDGID
		    if @ordnum is not null
		      update ORDDTL set ARVQTY = ARVQTY + @d_qty
                where ORDDTL.NUM = @ORDNUM and ORDDTL.GDGID = @gdgid and LINE = @ordline /*2003-08-27*/
		    FETCH NEXT FROM C_ORD INTO @GDGID, @WRH, @d_qty
		  END
		  CLOSE C_ORD
		  DEALLOCATE C_ORD
	  END
	ELSE IF (@ORDNUM IS NOT NULL) AND EXISTS(SELECT 1 FROM ORD WHERE NUM = @ORDNUM AND EXPDATE >= GETDATE())
  	BEGIN
  		DECLARE C_ORD CURSOR FOR
	    SELECT GDGID, WRH, QTY, ORDLINE
	    	FROM STKINDTL(NOLOCK) WHERE NUM = @NUM AND CLS = @CLS order by LINE
	    OPEN C_ORD
	    FETCH NEXT FROM C_ORD INTO @GDGID, @WRH, @DECORDQTY, @ORDLINE
	    WHILE @@FETCH_STATUS = 0 BEGIN
	      SELECT @STORE = NULL
	      SELECT @STORE = GID FROM STORE WHERE GID = @WRH
	      IF @STORE IS NULL SELECT @STORE = USERGID FROM SYSTEM
	      select @ORDQTY = isnull(QTY,0), @ARVQTY = isnull(ARVQTY,0) from ORDDTL(NOLOCK) where NUM = @ORDNUM and LINE = @ORDLINE
	      update ORDDTL set ARVQTY = ARVQTY + @DECORDQTY
            where ORDDTL.NUM = @ORDNUM and ORDDTL.GDGID = @gdgid and LINE = @ordline
	      if @DECORDQTY >= @ORDQTY - @ARVQTY
	        select @DECORDQTY = @ORDQTY - @ARVQTY
	      IF @DECORDQTY < 0  SET @DECORDQTY = 0
	      UPDATE STKINDTL SET DECORDQTY = @DECORDQTY WHERE NUM = @NUM AND CLS = @CLS and GDGID = @gdgid
	      UPDATE INV SET ORDQTY = ORDQTY - @DECORDQTY WHERE STORE = @STORE AND WRH = @WRH AND GDGID = @GDGID
	      FETCH NEXT FROM C_ORD INTO @GDGID, @WRH, @DECORDQTY, @ORDLINE
	    END
	    CLOSE C_ORD
	    DEALLOCATE C_ORD
  	END
  END
  ELSE IF (@TYPE = 'DIRALC') and (@CLS = '直配进')  --直配进
  BEGIN
  	SELECT @ORDNUM = ORDNUM, @CLRORDQTY = CLRORDQTY FROM DIRALC where CLS = @CLS and NUM = @NUM
  	IF @CLRORDQTY = 1   --清空在单量
    BEGIN
  	  DECLARE C_ORD CURSOR FOR
	    SELECT GDGID, WRH, QTY
	  	  FROM DIRALCDTL(NOLOCK) WHERE NUM = @NUM AND CLS = @CLS order by Line
	    OPEN C_ORD
	  FETCH NEXT FROM C_ORD INTO @GDGID, @WRH, @d_qty
	  WHILE @@FETCH_STATUS = 0
	  BEGIN
	    SELECT @STORE = NULL  /* 如果这个仓位是一个门店 */
	    SELECT @STORE = GID FROM STORE WHERE GID = @WRH
	    IF @STORE IS NULL SELECT @STORE = USERGID FROM SYSTEM
		SELECT @DECORDQTY = ISNULL(ORDQTY,0) FROM INV WHERE STORE = @STORE AND WRH = @WRH AND GDGID = @GDGID
	     IF @DECORDQTY < 0 SET @DECORDQTY = 0
		UPDATE DIRALCDTL SET DECORDQTY = @DECORDQTY WHERE NUM = @NUM AND CLS = @CLS and GDGID = @gdgid
	    UPDATE INV SET ORDQTY = 0 WHERE STORE = @STORE AND WRH = @WRH AND GDGID = @GDGID
	    update ORDDTL set ARVQTY = ARVQTY + @d_qty
	    if @ordnum is not null
	      update ORDDTL set ARVQTY = ARVQTY + @d_qty
              where ORDDTL.NUM = @ORDNUM and ORDDTL.GDGID = @gdgid and LINE = @ordline /*2003-08-27*/
	    FETCH NEXT FROM C_ORD INTO @GDGID, @WRH, @d_qty
	  END
	  CLOSE C_ORD
	  DEALLOCATE C_ORD
    END
	ELSE IF (@ORDNUM IS NOT NULL) AND EXISTS(SELECT 1 FROM ORD WHERE NUM = @ORDNUM AND EXPDATE >= GETDATE())
  	BEGIN
  	  DECLARE C_ORD CURSOR FOR
	    SELECT GDGID, WRH, QTY, ORDLINE
	    	FROM DIRALCDTL(NOLOCK) WHERE NUM = @NUM AND CLS = @CLS order by Line
	    OPEN C_ORD
	    FETCH NEXT FROM C_ORD INTO @GDGID, @WRH, @DECORDQTY,@ORDLINE
	    WHILE @@FETCH_STATUS = 0 BEGIN
	      SELECT @STORE = NULL
	      SELECT @STORE = GID FROM STORE WHERE GID = @WRH
	      IF @STORE IS NULL SELECT @STORE = USERGID FROM SYSTEM
	      select @ORDQTY = isnull(QTY, 0), @ARVQTY = isnull(ARVQTY, 0) from ORDDTL(NOLOCK) where NUM = @ORDNUM and LINE = @ORDLINE
	      update ORDDTL set ARVQTY = ARVQTY + @DECORDQTY
            where ORDDTL.NUM = @ORDNUM and ORDDTL.GDGID = @gdgid and LINE = @ordline /*2003-08-27*/
	      if @DECORDQTY >= @ORDQTY - @ARVQTY
	        select @DECORDQTY = @ORDQTY - @ARVQTY
	      IF @DECORDQTY < 0  SET @DECORDQTY = 0
	      UPDATE DIRALCDTL SET DECORDQTY = @DECORDQTY WHERE NUM = @NUM AND CLS = @CLS and GDGID = @gdgid
	      UPDATE INV SET ORDQTY = ORDQTY - @DECORDQTY WHERE STORE = @STORE AND WRH = @WRH AND GDGID = @GDGID
	      FETCH NEXT FROM C_ORD INTO @GDGID, @WRH, @DECORDQTY, @ORDLINE
	    END
	    CLOSE C_ORD
	    DEALLOCATE C_ORD
  	END
  END
  ELSE RETURN(1)
END
GO
