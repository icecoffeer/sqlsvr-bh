SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO

Create Procedure [dbo].[TA_GENFORKingdee88]
	@IS_ERR VARCHAR(255) OUTPUT --返回错误信息
	,@OPERATION_NAME VARCHAR(50)	--对应业务名称
	,@VOUCHER_DATE VARCHAR(10) --写到凭证中的日期
	,@WHERE_CLAUSE varchar(255)=NULL--查询控制条件
	,@OPERATOR_NAME VARCHAR(10)--生成凭证的操作员姓名
As

DECLARE @SQL varchar(250)
	,@SQL_ADDTION varchar(250)
	,@VOUCHER_TYPENAME VARCHAR(15)
	,@OPERATION_ID INT
	,@MAX_ROWS INT

DECLARE @SUMTYPE_ALL INT
	SELECT @SUMTYPE_ALL=-1

DECLARE @YW_ROWCOUNT INT--CURRENT OPERATION'S ROW COUNT

DECLARE @DATA1 VARCHAR(100)
	,@DATA2 VARCHAR(100)
	,@DATA3 VARCHAR(100)
	,@DATA4 VARCHAR(100)
	,@DATA5 VARCHAR(100)
	,@DATA6 VARCHAR(100)
	,@DATA7 VARCHAR(100)
	,@DATA8 VARCHAR(100)
	,@DATA9 VARCHAR(100)
	,@DATA10 VARCHAR(100)
	,@DATA11 VARCHAR(100)
	,@DATA12 VARCHAR(100)
	,@DATA13 VARCHAR(100)
	,@DATA14 VARCHAR(100)
	,@DATA15 VARCHAR(100)
	,@SUM_TYPE INT
DECLARE @DIRECTION BIT
	,@RELATIONID INT
	,@ACCOUNT_INDEX VARCHAR(15)
	,@BRIEF_INDEX VARCHAR(30)
	,@FCLSNAME1_INDEX INT
	,@FOBJID1_INDEX INT
	,@FOBJNAME1_INDEX INT
	,@FCLSNAME2_INDEX INT
	,@FOBJID2_INDEX INT
	,@FOBJNAME2_INDEX INT
	,@FCLSNAME3_INDEX INT
	,@FOBJID3_INDEX INT
	,@FOBJNAME3_INDEX INT
	,@FTransID_INDEX INT
	,@FCyID_INDEX INT
	,@FExchRate_INDEX INT
	,@FFcAmt_INDEX INT
	,@Fqty_INDEX INT
	,@Fprice_INDEX INT
	,@Fdebit_INDEX INT
	,@Fcredit_INDEX INT
	,@FSettleCode_INDEX INT
	,@FSettleNO_INDEX INT
	,@ISSUM INT

DECLARE @TMP INT

DECLARE @YW_CODE INT--凭证号
	,@ENTRYID INT --分录号
	,@FDC CHAR(1) --借贷方向

DECLARE	@BRIEF VARCHAR(80)
	,@ACCOUNT VARCHAR(40)
	,@ACCOUNTNAME VARCHAR(80)

	,@FCLSNAME1 VARCHAR(40)
	,@FOBJID1 VARCHAR(80)
	,@FOBJNAME1 VARCHAR(80)

	,@FCLSNAME2 VARCHAR(40)
	,@FOBJID2 VARCHAR(80)
	,@FOBJNAME2 VARCHAR(80)

	,@FCLSNAME3 VARCHAR(40)
	,@FOBJID3 VARCHAR(80)
	,@FOBJNAME3 VARCHAR(80)

	,@FTRANSID VARCHAR(80)
	,@FCYID VARCHAR(10)
	,@FEXCHRATE VARCHAR(32)
	,@FFCAMT VARCHAR(32)
	,@FQTY VARCHAR(32)
	,@FPRICE VARCHAR(32)
	,@FDEBIT VARCHAR(32)
	,@FCREDIT VARCHAR(32)
	,@FSETTLECODE VARCHAR(80)
	,@FSETTLENO VARCHAR(40)

DECLARE @FEXCHRATE_MONEY MONEY
	,@FFCAMT_MONEY MONEY
	,@FQTY_MONEY MONEY
	,@FPRICE_MONEY MONEY
	,@FDEBIT_MONEY MONEY
	,@FCREDIT_MONEY MONEY


DECLARE @S VARCHAR(30)--用于分解摘要，生成摘要信息
	,@I INT
	,@RETURN INT

	--查询业务
	SELECT @SQL=SQLCONTENT,@OPERATION_ID=OPERATIONID
		,@SQL_ADDTION=SQLADDTION
		,@VOUCHER_TYPENAME=VOUCHERTYPENAME
		,@MAX_ROWS=ISNULL(GENTYPE,1)
		FROM TA_OPERATION WHERE OPERATIONNAME=@OPERATION_NAME
	IF @@ROWCOUNT<>1 
	BEGIN
		select @IS_ERR='对应业务名称' +@OPERATION_Name
			+ '在数据库中不存在'
		RETURN -1
	END
	--清除临时表内容
	TRUNCATE TABLE #TA_KingdeeFACE
	--打开光标
--	select @SQL+ '  "' +@WHERE_CLAUSE +'"'

	EXEC (@SQL + '  ' +@WHERE_CLAUSE +'')
	OPEN CUR_GETVOUCHER
	FETCH NEXT FROM CUR_GETVOUCHER INTO @DATA1,@DATA2,@DATA3,@DATA4,@DATA5,@DATA6
		,@DATA7,@DATA8,@DATA9,@DATA10,@DATA11,@DATA12,@DATA13,@DATA14,@DATA15
	IF @@FETCH_STATUS=-1
		GOTO END_SP
	--打开凭证与业务数据对应关系光标
	DECLARE CUR_RELATION SCROLL CURSOR 
		FOR 
		SELECT RELATIONID,DIRECTION,ACCOUNT,BRIEF,FClsName1,FObjID1,FObjName1,
		FClsName2,FObjID2,FObjName2,FClsName3,FObjID3,FObjName3,FTransID,FCyID,
		FExchRate,FFcAmt,Fqty,Fprice,Fdebit,Fcredit,FSettleCode,FSettleNO,ISSUM 
		FROM TA_RLT_KingDee WHERE OPERATIONID=@OPERATION_ID
	OPEN CUR_RELATION
	FETCH NEXT FROM CUR_RELATION INTO @RELATIONID,@DIRECTION,@ACCOUNT_INDEX,@BRIEF_INDEX,
		@FCLSNAME1_INDEX,@FOBJID1_INDEX,@FOBJNAME1_INDEX,
		@FCLSNAME2_INDEX,@FOBJID2_INDEX,@FOBJNAME2_INDEX,
		@FCLSNAME3_INDEX,@FOBJID3_INDEX,@FOBJNAME3_INDEX,
		@fTRANSID_INDEX,@FCYID_INDEX,@FEXCHRATE_INDEX,@FFCAMT_INDEX,
		@FQTY_INDEX,@FPRICE_INDEX,@FDEBIT_INDEX,@FCREDIT_INDEX,@FSETTLECODE_INDEX,
		@FSETTLENO_INDEX,@ISSUM
	IF @@FETCH_STATUS=-1
	BEGIN
		SELECT @IS_ERR='该项业务的凭证没有建立与业务数据对应关系'
		CLOSE CUR_RELATION
		DEALLOCATE CUR_RELATION
		CLOSE CUR_GETVOUCHER
		DEALLOCATE CUR_GETVOUCHER
		RETURN -1
	END

	SELECT @YW_CODE=0--控制生成凭证的业务号
	SELECT @YW_ROWCOUNT=@MAX_ROWS
	SELECT @ENTRYID = 0

	WHILE @@FETCH_STATUS<>-1
	BEGIN
		IF @@FETCH_STATUS=-2 GOTO LOOPNEXT
		IF @MAX_ROWS=1
		BEGIN
			SELECT @YW_CODE=@YW_CODE+1 --业务序号加1
			SELECT @ENTRYID = 0
		END
		--If there are sumtype voucher,should added sumtype record before
		IF @MAX_ROWS>1 AND @YW_ROWCOUNT=@MAX_ROWS
		BEGIN
			SELECT @YW_CODE=@YW_CODE+1 --将借贷方框架重新生成
			SELECT @YW_ROWCOUNT=0
			SELECT @ENTRYID = 0
		END
		
		FETCH FIRST FROM CUR_RELATION INTO @RELATIONID,@DIRECTION,@ACCOUNT_INDEX,@BRIEF_INDEX,
			@FCLSNAME1_INDEX,@FOBJID1_INDEX,@FOBJNAME1_INDEX,
			@FCLSNAME2_INDEX,@FOBJID2_INDEX,@FOBJNAME2_INDEX,
			@FCLSNAME3_INDEX,@FOBJID3_INDEX,@FOBJNAME3_INDEX,
			@fTRANSID_INDEX,@FCYID_INDEX,@FEXCHRATE_INDEX,@FFCAMT_INDEX,
			@FQTY_INDEX,@FPRICE_INDEX,@FDEBIT_INDEX,@FCREDIT_INDEX,@FSETTLECODE_INDEX,
			@FSETTLENO_INDEX,@ISSUM
		WHILE @@FETCH_STATUS<>-1
		BEGIN
			IF @DIRECTION = 1 
				SELECT @FDC = '1'
			ELSE
				SELECT @FDC = '0'

			--生成摘要信息
			SELECT @BRIEF='',@S='',@I=0
			SELECT @I=CHARINDEX('+',@BRIEF_INDEX)
			WHILE @I<>0
			BEGIN
				SELECT @S=SUBSTRING(@BRIEF_INDEX,1,@I-1)
				IF SUBSTRING(ISNULL(@S,''),1,3)='COL' 
				BEGIN
					SELECT @TMP=CONVERT(INT,RIGHT(@S,DATALENGTH(@S)-3))
					EXEC TA_GETDATATOINDEX @S OUTPUT,@TMP,@DATA1,@DATA2,@DATA3
						,@DATA4,@DATA5,@DATA6,@DATA7,@DATA8,@DATA9,@DATA10
						,@DATA11,@DATA12,@DATA13,@DATA14,@DATA15
					SELECT @BRIEF=@BRIEF+rtrim(@S)
				END
				ELSE
				BEGIN
					SELECT @BRIEF=@BRIEF+rtrim(@S)
				END
				SELECT @BRIEF_INDEX=SUBSTRING(@BRIEF_INDEX,@I+1,DATALENGTH(@BRIEF_INDEX))
				SELECT @I=CHARINDEX('+',@BRIEF_INDEX)
			END

			IF SUBSTRING(ISNULL(@BRIEF_INDEX,''),1,3)='COL' 
			BEGIN
				SELECT @TMP=CONVERT(INT,RIGHT(@BRIEF_INDEX,DATALENGTH(@BRIEF_INDEX)-3))
				EXEC TA_GETDATATOINDEX @S OUTPUT,@TMP,@DATA1,@DATA2,@DATA3
					,@DATA4,@DATA5,@DATA6,@DATA7,@DATA8,@DATA9,@DATA10
					,@DATA11,@DATA12,@DATA13,@DATA14,@DATA15
				SELECT @BRIEF=@BRIEF+rtrim(@S)
			END
			ELSE
			BEGIN
				SELECT @BRIEF=@BRIEF+@BRIEF_INDEX
			END
			--取出对应的科目代码和名称
			IF (SELECT COUNT(*) FROM TA_RLTACCDTL WHERE RELATIONID=@RELATIONID)=0
			begin
				SELECT @ACCOUNT=@ACCOUNT_INDEX
			end
			else
			BEGIN
			--此时要根据定义情况判断明细科目
				EXEC @RETURN=TA_GETACCOUNTTODETAIL @IS_ERR OUTPUT,@ACCOUNT OUTPUT,@ACCOUNTNAME OUTPUT
					,@RELATIONID
					,@DATA1,@DATA2,@DATA3,@DATA4,@DATA5,@DATA6,@DATA7
					,@DATA8,@DATA9,@DATA10,@DATA11,@DATA12,@DATA13
					,@DATA14,@DATA15
				IF @RETURN<0 
				BEGIN
					CLOSE CUR_RELATION
					DEALLOCATE CUR_RELATION
					CLOSE CUR_GETVOUCHER
					DEALLOCATE CUR_GETVOUCHER
					RETURN @RETURN
				END
			END
			IF ISNULL(@ACCOUNT,'')='' GOTO RELATIONNEXT

			EXEC TA_GETDATATOINDEX @FCLSNAME1 OUTPUT,@FCLSNAME1_INDEX
				,@DATA1,@DATA2,@DATA3,@DATA4,@DATA5,@DATA6,@DATA7
				,@DATA8,@DATA9,@DATA10,@DATA11,@DATA12,@DATA13
				,@DATA14,@DATA15

			EXEC TA_GETDATATOINDEX @FOBJID1 OUTPUT,@FOBJID1_INDEX
				,@DATA1,@DATA2,@DATA3,@DATA4,@DATA5,@DATA6,@DATA7
				,@DATA8,@DATA9,@DATA10,@DATA11,@DATA12,@DATA13
				,@DATA14,@DATA15

			EXEC TA_GETDATATOINDEX @FOBJNAME1 OUTPUT,@FOBJNAME1_INDEX
				,@DATA1,@DATA2,@DATA3,@DATA4,@DATA5,@DATA6,@DATA7
				,@DATA8,@DATA9,@DATA10,@DATA11,@DATA12,@DATA13
				,@DATA14,@DATA15
			EXEC TA_GETDATATOINDEX @FCLSNAME2 OUTPUT,@FCLSNAME2_INDEX
				,@DATA1,@DATA2,@DATA3,@DATA4,@DATA5,@DATA6,@DATA7
				,@DATA8,@DATA9,@DATA10,@DATA11,@DATA12,@DATA13
				,@DATA14,@DATA15
			EXEC TA_GETDATATOINDEX @FOBJID2 OUTPUT,@FOBJID2_INDEX
				,@DATA1,@DATA2,@DATA3,@DATA4,@DATA5,@DATA6,@DATA7
				,@DATA8,@DATA9,@DATA10,@DATA11,@DATA12,@DATA13
				,@DATA14,@DATA15
			EXEC TA_GETDATATOINDEX @FOBJNAME2 OUTPUT,@FOBJNAME2_INDEX
				,@DATA1,@DATA2,@DATA3,@DATA4,@DATA5,@DATA6,@DATA7
				,@DATA8,@DATA9,@DATA10,@DATA11,@DATA12,@DATA13
				,@DATA14,@DATA15
			EXEC TA_GETDATATOINDEX @FCLSNAME3 OUTPUT,@FCLSNAME3_INDEX
				,@DATA1,@DATA2,@DATA3,@DATA4,@DATA5,@DATA6,@DATA7
				,@DATA8,@DATA9,@DATA10,@DATA11,@DATA12,@DATA13
				,@DATA14,@DATA15
			EXEC TA_GETDATATOINDEX @FOBJID3 OUTPUT,@FOBJID3_INDEX
				,@DATA1,@DATA2,@DATA3,@DATA4,@DATA5,@DATA6,@DATA7
				,@DATA8,@DATA9,@DATA10,@DATA11,@DATA12,@DATA13
				,@DATA14,@DATA15
			EXEC TA_GETDATATOINDEX @FOBJNAME3 OUTPUT,@FOBJNAME3_INDEX
				,@DATA1,@DATA2,@DATA3,@DATA4,@DATA5,@DATA6,@DATA7
				,@DATA8,@DATA9,@DATA10,@DATA11,@DATA12,@DATA13
				,@DATA14,@DATA15

			EXEC TA_GETDATATOINDEX @FTRANSID OUTPUT,@FTRANSID_INDEX
				,@DATA1,@DATA2,@DATA3,@DATA4,@DATA5,@DATA6,@DATA7
				,@DATA8,@DATA9,@DATA10,@DATA11,@DATA12,@DATA13
				,@DATA14,@DATA15
			EXEC TA_GETDATATOINDEX @FCYID OUTPUT,@FCYID_INDEX
				,@DATA1,@DATA2,@DATA3,@DATA4,@DATA5,@DATA6,@DATA7
				,@DATA8,@DATA9,@DATA10,@DATA11,@DATA12,@DATA13
				,@DATA14,@DATA15
			EXEC TA_GETDATATOINDEX @FEXCHRATE OUTPUT,@FEXCHRATE_INDEX
				,@DATA1,@DATA2,@DATA3,@DATA4,@DATA5,@DATA6,@DATA7
				,@DATA8,@DATA9,@DATA10,@DATA11,@DATA12,@DATA13
				,@DATA14,@DATA15
			IF ISNULL(@FEXCHRATE,'') = ''
			BEGIN
				SELECT @FEXCHRATE_MONEY = 0
			END
			ELSE
			BEGIN
				SELECT @FEXCHRATE_MONEY = CONVERT(MONEY,@FEXCHRATE)
			END

			EXEC TA_GETDATATOINDEX @FFCAMT OUTPUT,@FFCAMT_INDEX
				,@DATA1,@DATA2,@DATA3,@DATA4,@DATA5,@DATA6,@DATA7
				,@DATA8,@DATA9,@DATA10,@DATA11,@DATA12,@DATA13
				,@DATA14,@DATA15
			IF ISNULL(@FFCAMT,'') = ''
				SELECT @FFCAMT_MONEY = 0
			ELSE
				SELECT @FFCAMT_MONEY = CONVERT(MONEY,@FFCAMT)

			EXEC TA_GETDATATOINDEX @FQTY OUTPUT,@FQTY_INDEX
				,@DATA1,@DATA2,@DATA3,@DATA4,@DATA5,@DATA6,@DATA7
				,@DATA8,@DATA9,@DATA10,@DATA11,@DATA12,@DATA13
				,@DATA14,@DATA15
			IF ISNULL(@FQTY,'')= ''
				SELECT @FQTY_MONEY = 0
			ELSE
				SELECT @FQTY_MONEY = CONVERT(MONEY,@FQTY_MONEY)

			EXEC TA_GETDATATOINDEX @FPRICE OUTPUT,@FPRICE_INDEX
				,@DATA1,@DATA2,@DATA3,@DATA4,@DATA5,@DATA6,@DATA7
				,@DATA8,@DATA9,@DATA10,@DATA11,@DATA12,@DATA13
				,@DATA14,@DATA15
			IF ISNULL(@FPRICE,'') = ''
				SELECT @FPRICE_MONEY = 0
			ELSE
				SELECT @FPRICE_MONEY = CONVERT(MONEY,@FPRICE)

			EXEC TA_GETDATATOINDEX @FDEBIT OUTPUT,@FDEBIT_INDEX
				,@DATA1,@DATA2,@DATA3,@DATA4,@DATA5,@DATA6,@DATA7
				,@DATA8,@DATA9,@DATA10,@DATA11,@DATA12,@DATA13
				,@DATA14,@DATA15
			IF ISNULL(@FDEBIT,'') = ''
				SELECT @FDEBIT_MONEY = 0
			ELSE
				SELECT @FDEBIT_MONEY = CONVERT(MONEY,@FDEBIT)

			EXEC TA_GETDATATOINDEX @FCREDIT OUTPUT,@FCREDIT_INDEX
				,@DATA1,@DATA2,@DATA3,@DATA4,@DATA5,@DATA6,@DATA7
				,@DATA8,@DATA9,@DATA10,@DATA11,@DATA12,@DATA13
				,@DATA14,@DATA15
			IF ISNULL(@FCREDIT,'') = ''
				SELECT @FCREDIT_MONEY = 0
			ELSE
				SELECT @FCREDIT_MONEY = CONVERT(MONEY,@FCREDIT)

			EXEC TA_GETDATATOINDEX @FSETTLECODE OUTPUT,@FSETTLECODE_INDEX
				,@DATA1,@DATA2,@DATA3,@DATA4,@DATA5,@DATA6,@DATA7
				,@DATA8,@DATA9,@DATA10,@DATA11,@DATA12,@DATA13
				,@DATA14,@DATA15
			EXEC TA_GETDATATOINDEX @FSETTLENO OUTPUT,@FSETTLENO_INDEX
				,@DATA1,@DATA2,@DATA3,@DATA4,@DATA5,@DATA6,@DATA7
				,@DATA8,@DATA9,@DATA10,@DATA11,@DATA12,@DATA13
				,@DATA14,@DATA15

			IF (convert(money,@FDEBIT)=0) AND (convert(money,@FCREDIT)=0)
			BEGIN
				GOTO RELATIONNEXT
			END
			IF @FOBJID1_INDEX<>0 AND (ISNULL(@FOBJID1,'')='') GOTO RELATIONNEXT
			IF @FOBJID2_INDEX<>0 AND (ISNULL(@FOBJID2,'')='') GOTO RELATIONNEXT
			IF @FOBJID3_INDEX<>0 AND (ISNULL(@FOBJID3,'')='') GOTO RELATIONNEXT


			--将生成的数据保存到TA_KINGDEEFACE表中
			IF @MAX_ROWS=1 OR @ISSUM=0
			BEGIN
				INSERT INTO #TA_KINGDEEFACE (FDATE,FGROUP,FNUM,FENTRYID,
					FEXP,FACCTID,FCLSNAME1,FOBJID1,FOBJNAME1,FCLSNAME2,
					FOBJID2,FOBJNAME2,FCLSNAME3,FOBJID3,FOBJNAME3,FTRANSID,
					FCYID,FEXCHRATE,FDC,FFCYAMT,FQTY,FPRICE,FDEBIT,FCREDIT,FSETTLCODE,
					FSETTLENO,FPREPARE,FATTCHMENT)
					VALUES
					(@VOUCHER_DATE,@VOUCHER_TYPENAME,@YW_CODE,@ENTRYID,
					@BRIEF,@ACCOUNT,@FCLSNAME1,@FOBJID1,@FOBJNAME1,@FCLSNAME2,
					@FOBJID2,@FOBJNAME2,@FCLSNAME3,@FOBJID3,@FOBJNAME3,@FTRANSID,
					@FCYID,@FEXCHRATE_MONEY,@FDC,@FFCAMT_MONEY,@FQTY_MONEY,@FPRICE_MONEY,@FDEBIT_MONEY,@FCREDIT_MONEY,@FSETTLECODE,
					@FSETTLENO,@OPERATOR_NAME,1)
				SELECT @ENTRYID = @ENTRYID + 1
			END
			ELSE
			BEGIN
				SELECT @RETURN=COUNT(*) FROM #TA_KINGDEEFACE
					WHERE FNUM=@YW_CODE AND
					FACCTID = @ACCOUNT AND
					FDC = @FDC AND
					ISNULL(FOBJID1,'') = @FOBJID1 AND
					ISNULL(FOBJID2,'') = @FOBJID2 AND
					ISNULL(FOBJID3,'') = @FOBJID3

				If @RETURN<>0 
				BEGIN
					--将原记录修改
					UPDATE #TA_YYFACE SET FATTCHMENT=FATTCHMENT+1 ,
						FFCYAMT=FFCYAMT + @FFCAMT_MONEY,
						FQTY =FQTY + @FQTY_MONEY,
						FDEBIT=FDEBIT + @FDEBIT_MONEY,
						FCREDIT = FCREDIT + @FCREDIT_MONEY
					WHERE FNUM=@YW_CODE AND
					FACCTID = @ACCOUNT AND 
					FDC = @FDC AND
					ISNULL(FOBJID1,'') = @FOBJID1 AND
					ISNULL(FOBJID2,'') = @FOBJID2 AND
					ISNULL(FOBJID3,'') = @FOBJID3
				END
				ELSE
				BEGIN
					INSERT INTO #TA_KINGDEEFACE (FDATE,FGROUP,FNUM,FENTRYID,
						FEXP,FACCTID,FCLSNAME1,FOBJID1,FOBJNAME1,FCLSNAME2,
						FOBJID2,FOBJNAME2,FCLSNAME3,FOBJID3,FOBJNAME3,FTRANSID,
						FCYID,FEXCHRATE,FDC,FFCYAMT,FQTY,FPRICE,FDEBIT,FCREDIT,FSETTLCODE,
						FSETTLENO,FPREPARE,FATTCHMENT)
						VALUES
						(@VOUCHER_DATE,@VOUCHER_TYPENAME,@YW_CODE,@ENTRYID,
						@BRIEF,@ACCOUNT,@FCLSNAME1,@FOBJID1,@FOBJNAME1,@FCLSNAME2,
						@FOBJID2,@FOBJNAME2,@FCLSNAME3,@FOBJID3,@FOBJNAME3,@FTRANSID,
						@FCYID,@FEXCHRATE_MONEY,@FDC,@FFCAMT_MONEY,@FQTY_MONEY,@FPRICE_MONEY,@FDEBIT_MONEY,@FCREDIT_MONEY,@FSETTLECODE,
						@FSETTLENO,@OPERATOR_NAME,1)
					SELECT @ENTRYID = @ENTRYID + 1
				END

			END

RELATIONNEXT:
		FETCH NEXT FROM CUR_RELATION INTO @RELATIONID,@DIRECTION,@ACCOUNT_INDEX,@BRIEF_INDEX,
			@FCLSNAME1_INDEX,@FOBJID1_INDEX,@FOBJNAME1_INDEX,
			@FCLSNAME2_INDEX,@FOBJID2_INDEX,@FOBJNAME2_INDEX,
			@FCLSNAME3_INDEX,@FOBJID3_INDEX,@FOBJNAME3_INDEX,
			@fTRANSID_INDEX,@FCYID_INDEX,@FEXCHRATE_INDEX,@FFCAMT_INDEX,
			@FQTY_INDEX,@FPRICE_INDEX,@FDEBIT_INDEX,@FCREDIT_INDEX,@FSETTLECODE_INDEX,
			@FSETTLENO_INDEX,@ISSUM
		END
		SELECT @YW_ROWCOUNT=@YW_ROWCOUNT+1
LOOPNEXT:
		FETCH NEXT FROM CUR_GETVOUCHER INTO @DATA1,@DATA2,@DATA3,@DATA4,@DATA5,@DATA6
			,@DATA7,@DATA8,@DATA9,@DATA10,@DATA11,@DATA12,@DATA13,@DATA14,@DATA15
		
	END
	CLOSE CUR_RELATION
	DEALLOCATE CUR_RELATION
	SELECT @IS_ERR=''
END_SP:
	CLOSE CUR_GETVOUCHER
	DEALLOCATE CUR_GETVOUCHER
	RETURN (0)


GO
