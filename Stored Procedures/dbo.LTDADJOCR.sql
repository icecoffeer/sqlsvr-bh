SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
Create Procedure [dbo].[LTDADJOCR] (
  @NUM CHAR(14),
  @OPER INT = 1
) AS
BEGIN
  DECLARE @ATYPE INT
  DECLARE @ISLTD INT
  DECLARE @GDGID INT
  DECLARE @NEWVALUE INT
  DECLARE @STOREGID INT
  DECLARE @I INT
  DECLARE @J INT
  DECLARE @N INT
  DECLARE @BILLTO INT
  DECLARE @SALE INT
  DECLARE @RTLPRC MONEY
  DECLARE @INPRC MONEY
  DECLARE @STOREGIDSYS INT
  DECLARE @PROPERTY INT
  DECLARE @EON INT
  DECLARE @OLDVALUE INT  --ShenMin
  DECLARE @FINISHDATE DATETIME --ShenMin
  DECLARE @KEEPATYPE INT
  DECLARE @KEEPTYPE INT
  DECLARE @M INT
  DECLARE @NEWSALE INT

  SELECT @STOREGIDSYS = STOREGID FROM SYSTEM(NOLOCK)
  SELECT @PROPERTY =PROPERTY FROM STORE(NOLOCK) WHERE GID = @STOREGIDSYS
  SELECT @ATYPE = ATYPE, @EON = EON, @KEEPATYPE = KEEPATYPE FROM LTDADJ WHERE NUM = @NUM
  SELECT @N = CONVERT(INT, FLOOR(LOG10(@ATYPE)/LOG10(2)))

  if (@KEEPATYPE <> 0)
    SELECT @M = CONVERT(INT, FLOOR(LOG10(@KEEPATYPE)/LOG10(2)))
  else
    SELECT @M = 0

  IF OBJECT_ID('C_LTDADJ') IS NOT NULL DEALLOCATE C_LTDADJ
  DECLARE C_LTDADJ CURSOR FOR
    SELECT GDGID, NEWVALUE, OLDVALUE, FINISHDATE, NEWSALE FROM LTDADJDTL  --ShenMin
      WHERE NUM = @NUM
  OPEN C_LTDADJ
  FETCH NEXT FROM C_LTDADJ INTO @GDGID, @NEWVALUE, @OLDVALUE, @FINISHDATE, @NEWSALE  --ShenMin
  WHILE @@FETCH_STATUS = 0
  BEGIN
    /*影响GOODS*/
    IF @EON = 1
    BEGIN
      /*根据GOODS中原来的限制业务计算结果的限制业务*/
      SELECT @ISLTD = ISNULL(ISLTD, 0) FROM GOODS(NOLOCK)
        WHERE GID = @GDGID
      SET @I = 0
      SET @J = 1
      WHILE @I <= @N
      BEGIN
        IF @ATYPE & @J = @J
        BEGIN
          IF @NEWVALUE & @J = @J
            SELECT @ISLTD = @ISLTD | @J
          ELSE
            SELECT @ISLTD = @ISLTD & (~@J)
        END
        SET @I = @I + 1
        SET @J = @J * 2
      END
      UPDATE GOODS SET ISLTD = @ISLTD, LSTUPDTIME = GETDATE(), MODIFIER = @OPER
      WHERE GID = @GDGID

      /*根据GOODS中原来的经营属性计算结果的经营属性*/
      SELECT @KEEPTYPE = ISNULL(KEEPTYPE, 0) FROM GOODS(NOLOCK)
      WHERE GID = @GDGID
      SET @I = 0
      SET @J = 1
      WHILE @I <= @M
      BEGIN
        IF @KEEPATYPE & @J = @J
        BEGIN
          IF @NEWSALE & @J = @J
            SELECT @KEEPTYPE = @KEEPTYPE | @J
          ELSE
            SELECT @KEEPTYPE = @KEEPTYPE & (~@J)
        END
        SET @I = @I + 1
        SET @J = @J * 2
      END
      UPDATE GOODS SET KEEPTYPE = @KEEPTYPE, LSTUPDTIME = GETDATE(), MODIFIER = @OPER
      WHERE GID = @GDGID

     --ShenMin
      DECLARE @OptRd VARCHAR(100)
      EXEC OPTREADSTR 0, '限制业务调整途径', '1111', @OptRd OUTPUT
      IF SUBSTRING(@OPTRD, 4, 1) = '1'
      BEGIN
        IF EXISTS(SELECT 1 FROM GDLTD WHERE GDGID = @GDGID)
          DELETE FROM GDLTD WHERE GDGID = @GDGID AND FINISHDATE <= @FINISHDATE
        INSERT INTO GDLTD (GDGID, OLDVALUE, NEWVALUE, NEWVALUENUM, FINISHDATE)
        VALUES (@GDGID, @OLDVALUE, @ISLTD, @NUM, @FINISHDATE)
      END
    END

    /*是否影响GDSTORE*/
    IF OBJECT_ID('C_STORE') IS NOT NULL DEALLOCATE C_STORE
    DECLARE C_STORE CURSOR FOR
      SELECT STOREGID FROM LTDADJLACDTL WHERE NUM = @NUM
    OPEN C_STORE
    FETCH NEXT FROM C_STORE INTO @STOREGID
    WHILE @@FETCH_STATUS = 0
    BEGIN
      --GDSTORE中不存在，则插入一条记录
      IF NOT EXISTS(SELECT 1 FROM GDSTORE(NOLOCK) WHERE GDGID = @GDGID AND STOREGID = @STOREGID)
        INSERT INTO GDSTORE(GDGID, STOREGID,BILLTO,SALE,RTLPRC,INPRC,ALC)
        SELECT @GDGID,@STOREGID,BILLTO,SALE,RTLPRC,INPRC,ALC
        FROM GOODS WHERE GID = @GDGID

      /*根据GDSTORE中原来的限制业务计算结果的限制业务*/
      SELECT @ISLTD = ISNULL(ISLTD, 0) FROM GDSTORE(NOLOCK) WHERE STOREGID = @STOREGID AND GDGID = @GDGID
      SET @I = 0
      SET @J = 1
      WHILE @I <= @N
      BEGIN
        IF @ATYPE & @J = @J
        BEGIN
          IF @NEWVALUE & @J = @J
            SELECT @ISLTD = @ISLTD | @J
          ELSE
            SELECT @ISLTD = @ISLTD & (~@J)
        END
        SET @I = @I + 1
        SET @J = @J * 2
      END
      UPDATE GDSTORE SET ISLTD = @ISLTD WHERE GDGID = @GDGID AND STOREGID = @STOREGID

      FETCH NEXT FROM C_STORE INTO @STOREGID
    END
    CLOSE C_STORE
    DEALLOCATE C_STORE

    FETCH NEXT FROM C_LTDADJ INTO @GDGID, @NEWVALUE, @OLDVALUE, @FINISHDATE, @NEWSALE  --ShenMin
  END
  CLOSE C_LTDADJ
  DEALLOCATE C_LTDADJ

  UPDATE LTDADJ SET STAT = 800 WHERE NUM = @NUM --状态改为已生效
  --消息提醒
  exec MSCB_LTDADJOCR_OnValidate @NUM, @OPER
  --结束消息提醒
  Return 0
End
GO
