SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
CREATE PROCEDURE [dbo].[DIRALCFIFOCHK]
	@PI_CLS CHAR(10),
	@PI_NUM CHAR(10),
	@PI_LINE INT,
	@PI_WRH INT,
        @PI_SRCNUM CHAR(10), 
	@PI_GDGID INT,
	@PI_QTY MONEY,
	@PI_COST MONEY OUTPUT,
	@PI_ERRMSG VARCHAR(200) OUTPUT
AS
BEGIN
	DECLARE @COST MONEY,@AMT MONEY,@NEWSUBWRH INT
		,@SUBWRH INT
		,@NEWPRICE MONEY,@NEWTOTAL MONEY,@NEWTAX MONEY
		,@NEWALCPRC MONEY,@NEWCOST MONEY,@NEWOUTTAX MONEY
		,@ORGTOTAL MONEY,@ORGTAX MONEY,@ORGOUTTAX MONEY
	
	DECLARE @QTY MONEY,@INPRC MONEY,@CODE CHAR(10),@LSTINPRC MONEY,@ERR VARCHAR(200)


	DECLARE @RETURN_STATUS INT

        IF @PI_QTY < 0
        BEGIN
		SELECT @PI_ERRMSG = '先进先出方式下不能负数进出货。'
		RETURN -1
	END

		
	EXEC CLEARTEMPSUBWRH @PI_GDGID,@PI_WRH

	IF @PI_CLS = '直配进'
	BEGIN
		IF EXISTS(SELECT 1 FROM DIRALCDTL2 WHERE CLS= @PI_CLS AND NUM = @PI_NUM AND LINE = @PI_LINE)
		BEGIN
			INSERT INTO TEMPSUBWRH(SPID,WRH,SUBWRH,GDGID,QTY,COST,BILL,CLS,NUM,LINE)
				SELECT @@SPID,WRH,SUBWRH,GDGID,QTY,@PI_COST ,'DIRALC','直配出',@PI_SRCNUM,@PI_LINE FROM DIRALCDTL2  --这里不能取总部发来时的COST，以防止不是平进平出的现象，即直配进中的COST应体现配进成本
					WHERE CLS = @PI_CLS AND NUM = @PI_NUM AND LINE = @PI_LINE 
		END
		ELSE
		BEGIN
			--兼容使用的指定批次记录在DIRALCDTL中的情况
			SELECT @SUBWRH =ISNULL(SUBWRH,0) FROM DIRALCDTL WHERE CLS = @PI_CLS AND NUM = @PI_NUM AND LINE = @PI_LINE 
			IF @SUBWRH <> 0
			BEGIN
				INSERT INTO TEMPSUBWRH(SPID,WRH,SUBWRH,GDGID,QTY,COST)
					VALUES(@@SPID,@PI_WRH,@SUBWRH,@PI_GDGID,@PI_QTY,@PI_COST)
			END
		END

		EXEC @RETURN_STATUS = LOADINSUBWRH_2 @PI_GDGID,@PI_WRH,@PI_QTY,@PI_COST
		
		IF @RETURN_STATUS <> 0 RETURN @RETURN_STATUS

		DELETE FROM DIRALCDTL2 WHERE CLS = @PI_CLS AND NUM = @PI_NUM AND LINE = @PI_LINE 

		INSERT INTO DIRALCDTL2(CLS,NUM,LINE,SUBWRH,WRH,GDGID,QTY,COST,COSTADJ)
			SELECT @PI_CLS,@PI_NUM,@PI_LINE,SUBWRH,WRH,GDGID,QTY,COST,COSTADJ FROM TEMPSUBWRH 
				WHERE SPID = @@SPID AND  GDGID = @PI_GDGID AND WRH = @PI_WRH

		SELECT @NEWSUBWRH= MIN(SUBWRH), @NEWCOST = SUM(COST) FROM TEMPSUBWRH WHERE SPID = @@SPID AND WRH = @PI_WRH AND GDGID = @PI_GDGID

  	        IF @NEWCOST <> @PI_COST
         	BEGIN
                      SELECT @ORGTOTAL = TOTAL, @ORGTAX = TAX, @ORGOUTTAX = OUTTAX FROM DIRALCDTL WHERE CLS= @PI_CLS AND NUM = @PI_NUM AND LINE = @PI_LINE 
                      SELECT @NEWTOTAL = @ORGTOTAL + (@NEWCOST - @PI_COST)

		      SELECT @NEWALCPRC = @NEWCOST / @PI_QTY
		      SELECT @NEWPRICE = @NEWTOTAL / @PI_QTY

 		      SELECT @NEWOUTTAX = @NEWCOST - (@NEWCOST)/(1 + SALETAX/100) FROM GOODSH WHERE GID = @PI_GDGID
 		      SELECT @NEWTAX = @NEWTOTAL - (@NEWTOTAL)/(1 + TAXRATE/100) FROM GOODSH WHERE GID = @PI_GDGID
	
		      UPDATE DIRALCDTL SET SUBWRH = @NEWSUBWRH,TAX = @NEWTAX,PRICE = @NEWPRICE, TOTAL = @NEWTOTAL, 
                                                               OUTTAX = @NEWOUTTAX, ALCPRC = @NEWALCPRC, ALCAMT = @NEWCOST, 
                                                               COST = @NEWCOST, COSTPRC = @NEWALCPRC
			      WHERE CLS = @PI_CLS AND NUM = @PI_NUM AND LINE = @PI_LINE

		      UPDATE DIRALC SET TAX = TAX + (@NEWTAX - @ORGTAX),TOTAL = TOTAL + (@NEWTOTAL - @ORGTOTAL),
                                        OUTTAX = OUTTAX + (@NEWOUTTAX - @ORGOUTTAX),ALCTOTAL = ALCTOTAL + (@NEWCOST - @PI_COST)
			      WHERE CLS = @PI_CLS AND NUM = @PI_NUM
  	        END
	        ELSE
	        BEGIN
		      UPDATE DIRALCDTL SET SUBWRH = @NEWSUBWRH,COST = @PI_COST,COSTPRC = @PI_COST/@PI_QTY
			      WHERE CLS = @PI_CLS AND NUM = @PI_NUM AND LINE = @PI_LINE
                END
	END

	IF @PI_CLS = '直配进退'
	BEGIN
		IF EXISTS(SELECT 1 FROM DIRALCDTL2 WHERE CLS= @PI_CLS AND NUM = @PI_NUM AND LINE = @PI_LINE)
		BEGIN
			INSERT INTO TEMPSUBWRH(SPID,WRH,SUBWRH,GDGID,QTY,COST)
				SELECT @@SPID,WRH,SUBWRH,GDGID,QTY,COST FROM DIRALCDTL2
					WHERE CLS = @PI_CLS AND NUM = @PI_NUM AND LINE = @PI_LINE 
		END
		ELSE
		BEGIN
			--兼容使用的指定批次记录在DIRALCDTL中的情况
			SELECT @SUBWRH =ISNULL(SUBWRH,0) FROM DIRALCDTL WHERE CLS = @PI_CLS AND NUM = @PI_NUM AND LINE = @PI_LINE 
			IF @SUBWRH <> 0
			BEGIN
				INSERT INTO TEMPSUBWRH(SPID,WRH,SUBWRH,GDGID,QTY,COST)
					VALUES(@@SPID,@PI_WRH,@SUBWRH,@PI_GDGID,@PI_QTY,@PI_COST)
			END
		END

		EXEC @RETURN_STATUS = UNLOADSUBWRH_2 @PI_GDGID,@PI_WRH,@PI_QTY,@PI_COST OUTPUT
		
		IF @RETURN_STATUS <> 0 RETURN @RETURN_STATUS
		
		DELETE FROM DIRALCDTL2 WHERE CLS = @PI_CLS AND NUM = @PI_NUM AND LINE = @PI_LINE 

		INSERT INTO DIRALCDTL2(CLS,NUM,LINE,SUBWRH,WRH,GDGID,QTY,COST,COSTADJ)
			SELECT @PI_CLS,@PI_NUM,@PI_LINE,SUBWRH,WRH,GDGID,QTY,COST,COSTADJ FROM TEMPSUBWRH 
				WHERE SPID = @@SPID AND GDGID = @PI_GDGID AND WRH = @PI_WRH

		SELECT @NEWSUBWRH= MIN(SUBWRH) FROM TEMPSUBWRH WHERE SPID = @@SPID AND WRH = @PI_WRH AND GDGID = @PI_GDGID

		UPDATE DIRALCDTL SET SUBWRH = @NEWSUBWRH,COST = @PI_COST,COSTPRC = @PI_COST/@PI_QTY
			WHERE CLS = @PI_CLS AND NUM = @PI_NUM AND LINE = @PI_LINE
	END

	IF (@PI_CLS = '直配出') 
	BEGIN
		/*如果有批次明细，则不进行任何批次处理，否则按新批次进和出*/
		IF NOT EXISTS(SELECT 1 FROM DIRALCDTL2 WHERE CLS= @PI_CLS AND NUM = @PI_NUM AND LINE = @PI_LINE)
		BEGIN

			SELECT @LSTINPRC = @PI_COST/@PI_QTY
			--新增SUBWRH和CODE
			EXEC GETSUBWRHBATCH_2 @PI_GDGID,@LSTINPRC,@SUBWRH OUTPUT,@CODE OUTPUT,@ERR OUTPUT
			IF RTRIM(ISNULL(@ERR,'')) <> '' 
			BEGIN	
				RAISERROR( @ERR, 16, 1)
				RETURN 11
			END

			INSERT INTO TEMPSUBWRH(SPID,SUBWRH,WRH,GDGID,QTY,COST) 
				VALUES(@@SPID,@SUBWRH,@PI_WRH,@PI_GDGID,@PI_QTY,@PI_COST)

			INSERT INTO DIRALCDTL2(CLS,NUM,LINE,SUBWRH,WRH,GDGID,QTY,COST,COSTADJ)
				SELECT @PI_CLS,@PI_NUM,@PI_LINE,SUBWRH,WRH,GDGID,QTY,COST,COSTADJ FROM TEMPSUBWRH 
					WHERE SPID = @@SPID AND GDGID = @PI_GDGID AND WRH = @PI_WRH

			SELECT @NEWSUBWRH= MIN(SUBWRH) FROM TEMPSUBWRH WHERE SPID = @@SPID AND WRH = @PI_WRH AND GDGID = @PI_GDGID

			UPDATE DIRALCDTL SET SUBWRH = @NEWSUBWRH,COST = @PI_COST,COSTPRC = @PI_COST/@PI_QTY
				WHERE CLS = @PI_CLS AND NUM = @PI_NUM AND LINE = @PI_LINE

		END
		ELSE
		BEGIN
			SELECT @PI_COST = TOTAL FROM DIRALCDTL WHERE CLS = @PI_CLS AND NUM = @PI_NUM AND LINE = @PI_LINE
			/*将批次信息生成到SUBWRH中*/
			DECLARE CUR_DIRALCDTL CURSOR
				FOR SELECT SUBWRH,QTY,COST FROM DIRALCDTL2
					WHERE CLS = @PI_CLS AND NUM = @PI_NUM AND LINE = @PI_LINE 
			OPEN CUR_DIRALCDTL
			FETCH NEXT FROM CUR_DIRALCDTL INTO @SUBWRH,@QTY,@COST
			WHILE @@FETCH_STATUS = 0
			BEGIN

				UPDATE DIRALCDTL2 SET COST = @PI_COST WHERE CLS = @PI_CLS AND NUM = @PI_NUM AND LINE = @PI_LINE 
				SELECT @INPRC = @PI_COST / @QTY

				SELECT @RETURN_STATUS = 0
				EXEC @RETURN_STATUS = INSSUBWRHBATCH_2  @PI_GDGID, @SUBWRH, @CODE OUTPUT, @INPRC OUTPUT,
					  @PI_ERRMSG OUTPUT
				
				IF @RETURN_STATUS <> 0 BREAK

				FETCH NEXT FROM CUR_DIRALCDTL INTO @SUBWRH,@QTY,@COST
			END
			CLOSE CUR_DIRALCDTL
			DEALLOCATE CUR_DIRALCDTL
		END
	END

	IF (@PI_CLS = '直配出退')
	BEGIN
		/*如果有批次明细，则不进行任何批次处理，否则按新批次进和出*/
		IF NOT EXISTS(SELECT 1 FROM DIRALCDTL2 WHERE CLS= @PI_CLS AND NUM = @PI_NUM AND LINE = @PI_LINE)
		BEGIN

			SELECT @LSTINPRC = @PI_COST/@PI_QTY
			--新增SUBWRH和CODE
			EXEC GETSUBWRHBATCH_2 @PI_GDGID,@LSTINPRC,@SUBWRH OUTPUT,@CODE OUTPUT,@ERR OUTPUT
			IF RTRIM(ISNULL(@ERR,'')) <> '' 
			BEGIN	
				RAISERROR( @ERR, 16, 1)
				RETURN 11
			END

			INSERT INTO TEMPSUBWRH(SPID,SUBWRH,WRH,GDGID,QTY,COST) 
				VALUES(@@SPID,@SUBWRH,@PI_WRH,@PI_GDGID,@PI_QTY,@PI_COST)

			INSERT INTO DIRALCDTL2(CLS,NUM,LINE,SUBWRH,WRH,GDGID,QTY,COST,COSTADJ)
				SELECT @PI_CLS,@PI_NUM,@PI_LINE,SUBWRH,WRH,GDGID,QTY,COST,COSTADJ FROM TEMPSUBWRH 
					WHERE SPID = @@SPID AND GDGID = @PI_GDGID AND WRH = @PI_WRH

			SELECT @NEWSUBWRH= MIN(SUBWRH) FROM TEMPSUBWRH WHERE SPID = @@SPID AND WRH = @PI_WRH AND GDGID = @PI_GDGID

			UPDATE DIRALCDTL SET SUBWRH = @NEWSUBWRH,COST = @PI_COST,COSTPRC = @PI_COST/@PI_QTY
				WHERE CLS = @PI_CLS AND NUM = @PI_NUM AND LINE = @PI_LINE

		END
		ELSE
		BEGIN
			SELECT @PI_COST = COST FROM DIRALCDTL WHERE CLS = @PI_CLS AND NUM = @PI_NUM AND LINE = @PI_LINE
			/*将批次信息生成到SUBWRH中*/
			DECLARE CUR_DIRALCDTL CURSOR
				FOR SELECT SUBWRH,QTY,COST FROM DIRALCDTL2
					WHERE CLS = @PI_CLS AND NUM = @PI_NUM AND LINE = @PI_LINE 
			OPEN CUR_DIRALCDTL
			FETCH NEXT FROM CUR_DIRALCDTL INTO @SUBWRH,@QTY,@COST
			WHILE @@FETCH_STATUS = 0
			BEGIN
				SELECT @INPRC = @COST / @QTY

				SELECT @RETURN_STATUS = 0
				EXEC @RETURN_STATUS = INSSUBWRHBATCH_2  @PI_GDGID, @SUBWRH, @CODE OUTPUT, @INPRC OUTPUT,
					  @PI_ERRMSG OUTPUT
				
				IF @RETURN_STATUS <> 0 BREAK

				FETCH NEXT FROM CUR_DIRALCDTL INTO @SUBWRH,@QTY,@COST
			END
			CLOSE CUR_DIRALCDTL
			DEALLOCATE CUR_DIRALCDTL
		END
	END

	IF (@PI_CLS = '直销')
	BEGIN
		/*直销没有批次明细，不进行任何批次处理，只记录批次信息*/

			SELECT @LSTINPRC = @PI_COST/@PI_QTY

			--新增SUBWRH和CODE
			EXEC GETSUBWRHBATCH_2 @PI_GDGID,@LSTINPRC,@SUBWRH OUTPUT,@CODE OUTPUT,@ERR OUTPUT
			IF RTRIM(ISNULL(@ERR,'')) <> '' 
			BEGIN	
				RAISERROR( @ERR, 16, 1)
				RETURN 11
			END

			INSERT INTO TEMPSUBWRH(SPID,SUBWRH,WRH,GDGID,QTY,COST) 
				VALUES(@@SPID,@SUBWRH,@PI_WRH,@PI_GDGID,@PI_QTY,@PI_QTY*@LSTINPRC)

			INSERT INTO DIRALCDTL2(CLS,NUM,LINE,SUBWRH,WRH,GDGID,QTY,COST,COSTADJ)
				SELECT @PI_CLS,@PI_NUM,@PI_LINE,SUBWRH,WRH,GDGID,QTY,COST,COSTADJ FROM TEMPSUBWRH 
					WHERE SPID = @@SPID AND GDGID = @PI_GDGID AND WRH = @PI_WRH

			SELECT @NEWSUBWRH= MIN(SUBWRH) FROM TEMPSUBWRH WHERE SPID = @@SPID AND WRH = @PI_WRH AND GDGID = @PI_GDGID

			UPDATE DIRALCDTL SET SUBWRH = @NEWSUBWRH,COSTPRC = @PI_COST/@PI_QTY
				WHERE CLS = @PI_CLS AND NUM = @PI_NUM AND LINE = @PI_LINE
	END

	IF (@PI_CLS = '直销退')
	BEGIN
		/*直销退没有批次明细，不进行任何批次处理，只记录批次信息。与直销不同的是，直销退的成本价是指定的*/
			SELECT @LSTINPRC = COSTPRC FROM DIRALCDTL
	                        WHERE CLS = @PI_CLS AND NUM = @PI_NUM AND LINE = @PI_LINE

			--新增SUBWRH和CODE
			EXEC GETSUBWRHBATCH_2 @PI_GDGID,@LSTINPRC,@SUBWRH OUTPUT,@CODE OUTPUT,@ERR OUTPUT
			IF RTRIM(ISNULL(@ERR,'')) <> '' 
			BEGIN	
				RAISERROR( @ERR, 16, 1)
				RETURN 11
			END

			INSERT INTO TEMPSUBWRH(SPID,SUBWRH,WRH,GDGID,QTY,COST) 
				VALUES(@@SPID,@SUBWRH,@PI_WRH,@PI_GDGID,@PI_QTY,@PI_QTY*@LSTINPRC)

			INSERT INTO DIRALCDTL2(CLS,NUM,LINE,SUBWRH,WRH,GDGID,QTY,COST,COSTADJ)
				SELECT @PI_CLS,@PI_NUM,@PI_LINE,SUBWRH,WRH,GDGID,QTY,COST,COSTADJ FROM TEMPSUBWRH 
					WHERE SPID = @@SPID AND GDGID = @PI_GDGID AND WRH = @PI_WRH

			SELECT @NEWSUBWRH= MIN(SUBWRH) FROM TEMPSUBWRH WHERE SPID = @@SPID AND WRH = @PI_WRH AND GDGID = @PI_GDGID

			UPDATE DIRALCDTL SET SUBWRH = @NEWSUBWRH,COST = @PI_QTY*@LSTINPRC
				WHERE CLS = @PI_CLS AND NUM = @PI_NUM AND LINE = @PI_LINE
	END

	EXEC CLEARTEMPSUBWRH @PI_GDGID,@PI_WRH
	RETURN 0

END
GO
