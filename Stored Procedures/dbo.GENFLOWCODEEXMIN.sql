SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO
CREATE PROCEDURE [dbo].[GENFLOWCODEEXMIN]
(
  @CURCODE VARCHAR(20),
  @TABLENAME VARCHAR(20),
  @CURCODEOUT VARCHAR(20) OUTPUT,
  @POMSG VARCHAR(255) OUTPUT
)
AS
BEGIN
  DECLARE
    @CODELEN INT,
    @CODESTYLE VARCHAR(20),
    @MCODE  VARCHAR(20),
    @MCODE1 VARCHAR(20),
    @S  NVARCHAR(1000),
    @S1 NVARCHAR(1000),
    @SUBFLOWCODE VARCHAR(20),
    @INTUPPER INT,
    @EXECFLAG INT


    EXEC OPTREADINT 10, 'FLOWCODELENGTH', 0, @CODELEN OUTPUT
    EXEC OPTREADSTR 10, 'CHKCODESTYLE', 'EAN-8', @CODESTYLE OUTPUT

    IF NOT EXISTS (SELECT 1 FROM HDOPTION WHERE MODULENO = 10 AND OPTIONCAPTION = '商品代码取码生成流水码')
      EXEC APPEND_HDOPTION 10, '商品代码取码生成流水码', '', ''

    IF NOT EXISTS (SELECT 1 FROM HDOPTION WHERE MODULENO = 10 AND OPTIONCAPTION = '商品代码取码返回信息')
      EXEC APPEND_HDOPTION 10, '商品代码取码返回信息', '0', ''

    SET @EXECFLAG = 1
    IF @CODELEN = 0
      SET @S = 'SELECT @MCODE = MAX(CODE) FROM ' + @TABLENAME + ' WHERE CODE LIKE ''' + @CURCODE + '%'''
    ELSE BEGIN
      IF @CODESTYLE <> '（空）'
      BEGIN
        IF @CODELEN <= 8 SET @INTUPPER = 8
        ELSE SET @INTUPPER = 13
        IF LEN(@CURCODE) < @CODELEN
        BEGIN
          SET @S = 'SELECT TOP 1 1 FROM ' + @TABLENAME + ' WHERE CODE like ''' + @CURCODE + REPLICATE('0', @CODELEN - LEN(@CURCODE) - 1) + '1%'''
            + ' AND DATALENGTH(LTRIM(RTRIM(CODE))) BETWEEN ' + LTRIM(RTRIM(STR(@CODELEN)))
            + ' AND ' + LTRIM(RTRIM(STR(@INTUPPER)))
          EXECUTE SP_EXECUTESQL @S
          IF @@ROWCOUNT = 0
          BEGIN
            SET @S = 'SELECT @MCODE = ''' + @CURCODE + REPLICATE('0', @CODELEN - LEN(@CURCODE)) + ''''
          END ELSE BEGIN
            SET @EXECFLAG = 0
            SET @S1 = 'SELECT TOP 1 @MCODE = (SUBSTRING(A.CODE, 1, ' + STR(@CODELEN) + ')) FROM ' + @TABLENAME + ' A(NOLOCK) '
              + ' WHERE A.CODE LIKE ''' + @CURCODE + '%'' '
              + ' AND DATALENGTH(LTRIM(RTRIM(A.CODE))) BETWEEN ' + LTRIM(RTRIM(STR(@CODELEN))) + ' AND ' + LTRIM(RTRIM(STR(@INTUPPER)))
              + ' AND NOT EXISTS (SELECT 1 FROM ' + @TABLENAME + ' C(NOLOCK) WHERE C.CODE > A.CODE AND C.CODE LIKE ''' + @CURCODE + '%'' '
              + ' AND C.CODE LIKE DBO.INCREASEASCIISTRINGEX(SUBSTRING(A.CODE, 1, ' + STR(@CODELEN) + ')) + ''%'')'
            SET @S = @S1 + ' ORDER BY A.CODE'
            EXECUTE SP_EXECUTESQL @S, N'@MCODE VARCHAR(20) OUTPUT ', @MCODE OUTPUT
            SET @SUBFLOWCODE = SUBSTRING(@MCODE, LEN(@CURCODE) + 1, 1000)
            EXEC INCREASEASCIISTRING @SUBFLOWCODE OUTPUT
            IF LEN(@SUBFLOWCODE) <> LEN(@MCODE) - LEN(@CURCODE)
            BEGIN
              SET @S = @S1 + ' AND (ASCII(SUBSTRING(A.CODE, LEN(A.CODE), 1)) BETWEEN 65 AND 90 OR ASCII(SUBSTRING(A.CODE, LEN(A.CODE), 1)) BETWEEN 97 AND 122)'
                + ' ORDER BY A.CODE'
              EXECUTE SP_EXECUTESQL @S, N'@MCODE VARCHAR(20) OUTPUT ', @MCODE1 OUTPUT
              IF ISNULL(@MCODE1, '') = '' SET @S = @S1 + ' ORDER BY A.CODE'
              ELSE SET @MCODE = @MCODE1
            END
          END
        END ELSE BEGIN
          SET @S = 'SELECT @MCODE = MAX(SUBSTRING(CODE, 1, ' + STR(@CODELEN) + ')) '
               + ' FROM ' + @TABLENAME + ' WHERE CODE LIKE ''' + @CURCODE + '%'''
               + ' AND DATALENGTH(LTRIM(RTRIM(CODE))) BETWEEN ' + STR(@CODELEN)
               + ' AND ' + STR(@INTUPPER)
        END
      END ELSE BEGIN
        IF LEN(@CURCODE) < @CODELEN
        BEGIN
          SET @S = 'SELECT TOP 1 1 FROM ' + @TABLENAME + ' WHERE CODE = ''' + @CURCODE + REPLICATE('0', @CODELEN - LEN(@CURCODE) - 1) + '1' + ''''
          EXECUTE SP_EXECUTESQL @S
          IF @@ROWCOUNT = 0
          BEGIN
            SET @S = 'SELECT @MCODE = ''' + @CURCODE + REPLICATE('0', @CODELEN - LEN(@CURCODE)) + ''''
          END ELSE BEGIN
            SET @EXECFLAG = 0
            SET @S1 = 'SELECT TOP 1 @MCODE = (A.CODE) FROM ' + @TABLENAME + ' A(NOLOCK) '
              + ' WHERE A.CODE LIKE ''' + @CURCODE + '%'' AND DATALENGTH(RTRIM(LTRIM(A.CODE))) = ' + LTRIM(RTRIM(STR(@CODELEN)))
              + ' AND NOT EXISTS (SELECT 1 FROM ' + @TABLENAME + ' C(NOLOCK) WHERE C.CODE > A.CODE AND C.CODE LIKE ''' + @CURCODE
              + '%'' AND C.CODE = DBO.INCREASEASCIISTRINGEX(A.CODE))'
            SET @S = @S1 + ' ORDER BY A.CODE'
            EXECUTE SP_EXECUTESQL @S, N'@MCODE VARCHAR(20) OUTPUT ', @MCODE OUTPUT
            SET @SUBFLOWCODE = SUBSTRING(@MCODE, LEN(@CURCODE) + 1, 1000)
            EXEC INCREASEASCIISTRING @SUBFLOWCODE OUTPUT
            IF LEN(@SUBFLOWCODE) <> LEN(@MCODE) - LEN(@CURCODE)
            BEGIN
              SET @S = @S1 + ' AND (ASCII(SUBSTRING(A.CODE, LEN(A.CODE), 1)) BETWEEN 65 AND 90 OR ASCII(SUBSTRING(A.CODE, LEN(A.CODE), 1)) BETWEEN 97 AND 122)'
                + ' ORDER BY A.CODE'
              EXECUTE SP_EXECUTESQL @S, N'@MCODE VARCHAR(20) OUTPUT ', @MCODE1 OUTPUT
              IF ISNULL(@MCODE1, '') = '' SET @S = @S1 + ' ORDER BY A.CODE'
              ELSE SET @MCODE = @MCODE1
            END
          END
        END ELSE
          SET @S = 'SELECT @MCODE = MAX(CODE) FROM ' + @TABLENAME + ' WHERE CODE LIKE ''' + @CURCODE + '%'''
            + ' AND DATALENGTH(LTRIM(RTRIM(CODE))) = ' + STR(@CODELEN)
      END
    END

    IF @EXECFLAG = 1
      EXECUTE SP_EXECUTESQL @S, N'@MCODE VARCHAR(20) OUTPUT ', @MCODE OUTPUT
    SET @MCODE = LTRIM(RTRIM(@MCODE))
    IF @MCODE IS NULL SET @MCODE = ''
    IF @MCODE = ''
    BEGIN
      IF @CODELEN = 0 SET @CURCODE = @CURCODE
      ELSE
        IF LEN(@CURCODE) < @CODELEN
          SET @CURCODE = @CURCODE + REPLICATE('0', @CODELEN - LEN(@CURCODE) - 1) + '1'
        ELSE
          SET @CURCODE = @CURCODE
    END
    ELSE
    BEGIN
      SET @SUBFLOWCODE = SUBSTRING(@MCODE, LEN(@CURCODE) + 1, 8000)
      EXEC INCREASEASCIISTRING @SUBFLOWCODE OUTPUT
      IF LEN(@SUBFLOWCODE) = LEN(@MCODE) - LEN(@CURCODE)
        SET @CURCODE = @CURCODE + @SUBFLOWCODE
      ELSE BEGIN
        SET @POMSG = '流水码超出范围。当前的最大码值是' + @MCODE
        UPDATE HDOPTION SET OPTIONVALUE = @POMSG WHERE MODULENO = 10 AND OPTIONCAPTION = '商品代码取码返回信息'
        RETURN 1
      END
    END
    SET @CURCODEOUT = @CURCODE
    UPDATE HDOPTION SET OPTIONVALUE = @CURCODEOUT WHERE MODULENO = 10 AND OPTIONCAPTION = '商品代码取码生成流水码'
    UPDATE HDOPTION SET OPTIONVALUE = '0' WHERE MODULENO = 10 AND OPTIONCAPTION = '商品代码取码返回信息'
    RETURN 0
END
GO
