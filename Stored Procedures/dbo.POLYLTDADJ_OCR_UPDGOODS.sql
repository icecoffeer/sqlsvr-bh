SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
CREATE PROCEDURE [dbo].[POLYLTDADJ_OCR_UPDGOODS]
(
  @ATYPE INT,
  @DEPT CHAR(10),
  @VENDOR INT,
  @BRAND VARCHAR(10),
  @LTDVALUE INT,
  @OPER VARCHAR(30),
  @MSG VARCHAR(255) OUTPUT
) AS
BEGIN
  DECLARE
    @OPERGID INT,
    @GDGID INT,
    @ISLTD INT
  SELECT @OPERGID = GID FROM EMPLOYEEH(NOLOCK) WHERE (RTRIM(NAME) + '[' + RTRIM(CODE) + ']') = RTRIM(@OPER)
  IF @OPERGID IS NULL SET @OPERGID = 1

  IF @VENDOR IS NOT NULL AND @BRAND IS NULL
  BEGIN
    DECLARE C_GOODS CURSOR FOR
      SELECT GID, ISLTD FROM GOODS(NOLOCK)
      WHERE SUBSTRING(F1, 1, LEN(@DEPT)) = @DEPT AND BILLTO = @VENDOR
  END
  ELSE IF @VENDOR IS NULL AND @BRAND IS NOT NULL
  BEGIN
    DECLARE C_GOODS CURSOR FOR
      SELECT GID, ISLTD FROM GOODS(NOLOCK)
      WHERE SUBSTRING(F1, 1, LEN(@DEPT)) = @DEPT AND BRAND = @BRAND
  END
  ELSE IF @VENDOR IS NULL AND @BRAND IS NULL
  BEGIN
    DECLARE C_GOODS CURSOR FOR
      SELECT GID, ISLTD FROM GOODS(NOLOCK)
      WHERE SUBSTRING(F1, 1, LEN(@DEPT)) = @DEPT
  END
  ELSE BEGIN
    DECLARE C_GOODS CURSOR FOR
      SELECT GID, ISLTD FROM GOODS(NOLOCK)
      WHERE SUBSTRING(F1, 1, LEN(@DEPT)) = @DEPT AND BILLTO = @VENDOR AND BRAND = @BRAND
  END

  OPEN C_GOODS
  FETCH NEXT FROM C_GOODS INTO @GDGID, @ISLTD
  WHILE @@FETCH_STATUS = 0
  BEGIN
    EXEC POLYLTDADJ_OCR_UPDONEGOODS @ATYPE, @LTDVALUE, @GDGID, @ISLTD, @OPERGID, @MSG OUTPUT
    FETCH NEXT FROM C_GOODS INTO @GDGID, @ISLTD
  END
  CLOSE C_GOODS
  DEALLOCATE C_GOODS
  RETURN(0)
END
GO
