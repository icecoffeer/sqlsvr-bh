SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO

Create Procedure [dbo].[TA_GENForBoke]
	@IS_ERR VARCHAR(255) OUTPUT --返回错误信息
	,@OPERATION_NAME VARCHAR(50)	--对应业务名称
	,@VOUCHER_DATE VARCHAR(10) --写到凭证中的日期
	,@WHERE_CLAUSE varchar(255)=NULL--查询控制条件
	,@OPERATOR_NAME VARCHAR(10)--生成凭证的操作员姓名
As

DECLARE @SQL varchar(250)
	,@SQL_ADDTION varchar(250)
	,@VOUCHER_TYPENAME VARCHAR(15)
	,@OPERATION_ID INT
	,@MAX_ROWS INT--最大行数

DECLARE @SUMTYPE_ALL INT--汇总类型
	SELECT @SUMTYPE_ALL=-1

DECLARE @YW_ROWCOUNT INT--CURRENT OPERATION'S ROW COUNT

DECLARE @DATA1 VARCHAR(100)
	,@DATA2 VARCHAR(100)
	,@DATA3 VARCHAR(100)
	,@DATA4 VARCHAR(100)
	,@DATA5 VARCHAR(100)
	,@DATA6 VARCHAR(100)
	,@DATA7 VARCHAR(100)
	,@DATA8 VARCHAR(100)
	,@DATA9 VARCHAR(100)
	,@DATA10 VARCHAR(100)
	,@DATA11 VARCHAR(100)
	,@DATA12 VARCHAR(100)
	,@DATA13 VARCHAR(100)
	,@DATA14 VARCHAR(100)
	,@DATA15 VARCHAR(100)
	,@SUM_TYPE INT--????????????
DECLARE @DIRECTION BIT
	,@RELATIONID INT
	,@ACCOUNT_INDEX VARCHAR(20)
	,@ACCOUNTNAME_INDEX VARCHAR(50)
	,@BRIEF_INDEX VARCHAR(50)
	,@TOTALMONEY_INDEX INT
	,@QUANTITY_INDEX INT
	,@FOREINMONEY_INDEX INT
	,@RATE_INDEX INT
	,@PRICE_INDEX INT
	,@CASHCODE_INDEX INT
	,@SETTLENO_INDEX INT
	,@FIRMCODE_INDEX INT
	,@FIRMNAME_INDEX INT
	,@CORCODE_INDEX INT
	,@PROJECTCODE_INDEX INT
	,@PROJECTNAME_INDEX INT
	,@OPERATORCODE_INDEX INT
	,@OPERATORNAME_INDEX INT
	,@OPERATEDATE_INDEX INT
	,@ISSUM INT

DECLARE @TMP INT

DECLARE @YW_CODE INT--凭证序号
	,@FL_CODE INT --分录编号
	,@ZFL_CODE INT--子分录编号
	,@FL_ZFL INT --有子分录编号的分录序号

DECLARE	@BRIEF VARCHAR(50)
	,@ACCOUNT VARCHAR(20)
	,@ACCOUNTNAME VARCHAR(50)
	,@TOTALMONEY VARCHAR(20)
	,@QUANTITY VARCHAR(20)
	,@FOREINMONEY VARCHAR(20)
	,@RATE VARCHAR(20)
	,@PRICE VARCHAR(20)
	,@CASHCODE VARCHAR(5)
	,@SETTLENO VARCHAR(6)
	,@FIRMCODE VARCHAR(15)
	,@FIRMNAME VARCHAR(40)
	,@CORCODE VARCHAR(10)
	,@PROJECTCODE VARCHAR(15)
	,@PROJECTNAME VARCHAR(40)
	,@OPERATORCODE VARCHAR(10)
	,@OPERATORNAME VARCHAR(10)
	,@OPERATEDATE VARCHAR(10)
	
DECLARE @S VARCHAR(30)--用于分解摘要，生成摘要信息
	,@I INT

DECLARE @RETURN INT

DECLARE @DIS_YWCODE VARCHAR(100)--增加业务编码的条件，根据第一个字段判定
	,@DIS_ADDNUM VARCHAR(100) --增加附件数的条件，根据第二个字段判定
	,@TMP_ADDNUM INT --统计附件数

	--根据业务名称查询定义的内容
	SELECT @SQL=SQLCONTENT,@OPERATION_ID=OPERATIONID
		,@SQL_ADDTION=SQLADDTION
		,@VOUCHER_TYPENAME=VOUCHERTYPENAME
		,@MAX_ROWS=ISNULL(GENTYPE,1)
		FROM TA_OPERATION WHERE OPERATIONNAME=@OPERATION_NAME
	IF @@ROWCOUNT<>1 
	BEGIN
		select @IS_ERR='对应业务名称' +@OPERATION_Name
			+ '在数据库中不存在'
		RETURN -1
	END
	--清除临时表内容
	TRUNCATE TABLE #TA_BokeFACE
	--打开光标

	EXEC (@SQL + '  ' +@WHERE_CLAUSE +' ')

	OPEN CUR_GETVOUCHER

	FETCH Next FROM CUR_GETVOUCHER INTO @DATA1,@DATA2,@DATA3,@DATA4,@DATA5,@DATA6
		,@DATA7,@DATA8,@DATA9,@DATA10,@DATA11,@DATA12,@DATA13,@DATA14,@DATA15
	IF @@FETCH_STATUS=-1
		GOTO END_SP
	--打开凭证与业务数据对应关系光标
	DECLARE CUR_RELATION SCROLL CURSOR 
		FOR 
		SELECT RELATIONID,DIRECTION,ACCOUNT,ACCOUNTNAME,BRIEF,TOTALMONEY,QUANTITY,PRICE,CASHCODE,
		FOREINMONEY,RATE,SETTLENO,FIRMCODE,FIRMNAME,CORCODE,PROJECTCODE,
		PROJECTNAME,OPERATORCODE,OPERATORNAME,OPERATEDATE,
		ISSUM FROM TA_RELATION WHERE OPERATIONID=@OPERATION_ID
	OPEN CUR_RELATION

	FETCH NEXT FROM CUR_RELATION INTO @RELATIONID,@DIRECTION,@ACCOUNT_INDEX,@ACCOUNTNAME_INDEX,@BRIEF_INDEX,
		@TOTALMONEY_INDEX,@QUANTITY_INDEX,@PRICE_INDEX,@CASHCODE_INDEX,@FOREINMONEY_INDEX,
		@RATE_INDEX,@SETTLENO_INDEX,@FIRMCODE_INDEX,@FIRMNAME_INDEX,@CORCODE_INDEX,
		@PROJECTCODE_INDEX,@PROJECTNAME_INDEX,@OPERATORCODE_INDEX,@OPERATORNAME_INDEX,
		@OPERATEDATE_INDEX,@ISSUM
	IF @@FETCH_STATUS=-1
	BEGIN
		SELECT @IS_ERR='该项业务的凭证没有建立与业务数据对应关系'
		CLOSE CUR_RELATION
		DEALLOCATE CUR_RELATION
		CLOSE CUR_GETVOUCHER
		DEALLOCATE CUR_GETVOUCHER
		RETURN -1
	END

	SELECT @YW_CODE=0--控制生成凭证的业务号
	SELECT @FL_CODE=0
	SELECT @ZFL_CODE=0
	SELECT @YW_ROWCOUNT=@MAX_ROWS

	SELECT @DIS_YWCODE=''
	SELECT @DIS_ADDNUM=''

	SELECT @TMP_ADDNUM=0

	WHILE @@FETCH_STATUS<>-1
	BEGIN
		IF @@FETCH_STATUS=-2 GOTO LOOPNEXT
		IF @MAX_ROWS=1 AND (@DIS_YWCODE<>@DATA1)--只有第一个判定的改变时业务序号才增加
		BEGIN
			--修改附件数
			UPDATE #TA_BOKEFACE SET
				ADDNUM=CONVERT(VARCHAR(4),@TMP_ADDNUM)
			WHERE CONVERT(INT,OPERATCODE)=@YW_CODE
				
			SELECT @YW_CODE=@YW_CODE+1--业务序号加1
			SELECT @FL_CODE=1
			SELECT @ZFL_CODE=0
			SELECT @YW_ROWCOUNT=0
			
			Select @DIS_YWCODE=@DATA1
			SELECT @DIS_ADDNUM=@DATA2
			SELECT @TMP_ADDNUM=1
		END
		IF @DIS_ADDNUM<>@DATA2
		BEGIN
			SELECT @TMP_ADDNUM=@TMP_ADDNUM+1
		END

		--If there are sumtype voucher,should added sumtype record before
		IF @MAX_ROWS>1 AND @YW_ROWCOUNT=@MAX_ROWS
		BEGIN
			SELECT @YW_CODE=@YW_CODE+1--业务序号加一
			SELECT @FL_CODE=1
			SELECT @ZFL_CODE=0
			SELECT @YW_ROWCOUNT=0
		END
		
		FETCH FIRST FROM CUR_RELATION INTO @RELATIONID,@DIRECTION,@ACCOUNT_INDEX,@ACCOUNTNAME_INDEX,@BRIEF_INDEX,
			@TOTALMONEY_INDEX,@QUANTITY_INDEX,@PRICE_INDEX,@CASHCODE_INDEX,@FOREINMONEY_INDEX,
			@RATE_INDEX,@SETTLENO_INDEX,@FIRMCODE_INDEX,@FIRMNAME_INDEX,@CORCODE_INDEX,
			@PROJECTCODE_INDEX,@PROJECTNAME_INDEX,@OPERATORCODE_INDEX,@OPERATORNAME_INDEX,
			@OPERATEDATE_INDEX,@ISSUM
		WHILE @@FETCH_STATUS<>-1
		BEGIN
			--生成摘要信息
			if @@FETCH_STATUS=-2 GOTO LOOPNEXT
			SELECT @BRIEF='',@S='',@I=0
			SELECT @I=CHARINDEX('+',@BRIEF_INDEX)
			WHILE @I<>0
			BEGIN
				SELECT @S=SUBSTRING(@BRIEF_INDEX,1,@I-1)
				IF SUBSTRING(ISNULL(@S,''),1,3)='COL' 
				BEGIN
					SELECT @TMP=CONVERT(INT,RIGHT(@S,DATALENGTH(@S)-3))
					EXEC TA_GETDATATOINDEX @S OUTPUT,@TMP,@DATA1,@DATA2,@DATA3
						,@DATA4,@DATA5,@DATA6,@DATA7,@DATA8,@DATA9,@DATA10
						,@DATA11,@DATA12,@DATA13,@DATA14,@DATA15
					SELECT @BRIEF=@BRIEF+rtrim(@S)
				END
				ELSE
				BEGIN
					SELECT @BRIEF=@BRIEF+rtrim(@S)
				END
				SELECT @BRIEF_INDEX=SUBSTRING(@BRIEF_INDEX,@I+1,DATALENGTH(@BRIEF_INDEX))
				SELECT @I=CHARINDEX('+',@BRIEF_INDEX)
			END

			IF SUBSTRING(ISNULL(@BRIEF_INDEX,''),1,3)='COL' 
			BEGIN
				SELECT @TMP=CONVERT(INT,RIGHT(@BRIEF_INDEX,DATALENGTH(@BRIEF_INDEX)-3))
				EXEC TA_GETDATATOINDEX @S OUTPUT,@TMP,@DATA1,@DATA2,@DATA3
					,@DATA4,@DATA5,@DATA6,@DATA7,@DATA8,@DATA9,@DATA10
					,@DATA11,@DATA12,@DATA13,@DATA14,@DATA15
				SELECT @BRIEF=@BRIEF+rtrim(@S)
			END
			ELSE
			BEGIN
				SELECT @BRIEF=@BRIEF+@BRIEF_INDEX
			END
			--取出对应的科目代码和名称
			Select @Return=Count(*) from TA_RLTACCDTL WHERE RELATIONID=@RELATIONID
			IF Isnull(@Return,0) = 0
			begin
				SELECT @ACCOUNT=@ACCOUNT_INDEX,@ACCOUNTNAME=@ACCOUNTNAME_INDEX
			end
			else
			BEGIN
			--此时要根据定义情况判断明细科目
				EXEC @RETURN=TA_GETACCOUNTTODETAIL @IS_ERR OUTPUT,@ACCOUNT OUTPUT,@ACCOUNTNAME OUTPUT,@RELATIONID
					,@DATA1,@DATA2,@DATA3,@DATA4,@DATA5,@DATA6,@DATA7
					,@DATA8,@DATA9,@DATA10,@DATA11,@DATA12,@DATA13
					,@DATA14,@DATA15
				IF @RETURN<0 
				BEGIN
					CLOSE CUR_RELATION
					DEALLOCATE CUR_RELATION
					CLOSE CUR_GETVOUCHER
					DEALLOCATE CUR_GETVOUCHER
					RETURN @RETURN
				END
			END

			IF ISNULL(@ACCOUNT,'')='' GOTO RELATIONNEXT
			
			
			EXEC TA_GETDATATOINDEX @TOTALMONEY OUTPUT,@TOTALMONEY_INDEX
				,@DATA1,@DATA2,@DATA3,@DATA4,@DATA5,@DATA6,@DATA7
				,@DATA8,@DATA9,@DATA10,@DATA11,@DATA12,@DATA13
				,@DATA14,@DATA15
			EXEC TA_GETDATATOINDEX @QUANTITY OUTPUT,@QUANTITY_INDEX
				,@DATA1,@DATA2,@DATA3,@DATA4,@DATA5,@DATA6,@DATA7
				,@DATA8,@DATA9,@DATA10,@DATA11,@DATA12,@DATA13
				,@DATA14,@DATA15
			EXEC TA_GETDATATOINDEX @FOREINMONEY OUTPUT,@FOREINMONEY_INDEX
				,@DATA1,@DATA2,@DATA3,@DATA4,@DATA5,@DATA6,@DATA7
				,@DATA8,@DATA9,@DATA10,@DATA11,@DATA12,@DATA13
				,@DATA14,@DATA15
			EXEC TA_GETDATATOINDEX @RATE OUTPUT,@RATE_INDEX
				,@DATA1,@DATA2,@DATA3,@DATA4,@DATA5,@DATA6,@DATA7
				,@DATA8,@DATA9,@DATA10,@DATA11,@DATA12,@DATA13
				,@DATA14,@DATA15
			EXEC TA_GETDATATOINDEX @PRICE OUTPUT,@PRICE_INDEX
				,@DATA1,@DATA2,@DATA3,@DATA4,@DATA5,@DATA6,@DATA7
				,@DATA8,@DATA9,@DATA10,@DATA11,@DATA12,@DATA13
				,@DATA14,@DATA15
			EXEC TA_GETDATATOINDEX @SETTLENO OUTPUT,@SETTLENO_INDEX
				,@DATA1,@DATA2,@DATA3,@DATA4,@DATA5,@DATA6,@DATA7
				,@DATA8,@DATA9,@DATA10,@DATA11,@DATA12,@DATA13
				,@DATA14,@DATA15
			EXEC TA_GETDATATOINDEX @CASHCODE OUTPUT,@CASHCODE_INDEX
				,@DATA1,@DATA2,@DATA3,@DATA4,@DATA5,@DATA6,@DATA7
				,@DATA8,@DATA9,@DATA10,@DATA11,@DATA12,@DATA13
				,@DATA14,@DATA15
			EXEC TA_GETDATATOINDEX @FIRMCODE OUTPUT,@FIRMCODE_INDEX
				,@DATA1,@DATA2,@DATA3,@DATA4,@DATA5,@DATA6,@DATA7
				,@DATA8,@DATA9,@DATA10,@DATA11,@DATA12,@DATA13
				,@DATA14,@DATA15
			EXEC TA_GETDATATOINDEX @FIRMNAME OUTPUT,@FIRMNAME_INDEX
				,@DATA1,@DATA2,@DATA3,@DATA4,@DATA5,@DATA6,@DATA7
				,@DATA8,@DATA9,@DATA10,@DATA11,@DATA12,@DATA13
				,@DATA14,@DATA15
			EXEC TA_GETDATATOINDEX @PROJECTCODE OUTPUT,@PROJECTCODE_INDEX
				,@DATA1,@DATA2,@DATA3,@DATA4,@DATA5,@DATA6,@DATA7
				,@DATA8,@DATA9,@DATA10,@DATA11,@DATA12,@DATA13
				,@DATA14,@DATA15
			EXEC TA_GETDATATOINDEX @PROJECTNAME OUTPUT,@PROJECTNAME_INDEX
				,@DATA1,@DATA2,@DATA3,@DATA4,@DATA5,@DATA6,@DATA7
				,@DATA8,@DATA9,@DATA10,@DATA11,@DATA12,@DATA13
				,@DATA14,@DATA15
			EXEC TA_GETDATATOINDEX @CORCODE OUTPUT,@CORCODE_INDEX
				,@DATA1,@DATA2,@DATA3,@DATA4,@DATA5,@DATA6,@DATA7
				,@DATA8,@DATA9,@DATA10,@DATA11,@DATA12,@DATA13
				,@DATA14,@DATA15

			EXEC TA_GETDATATOINDEX @OPERATORCODE OUTPUT,@OPERATORCODE_INDEX
				,@DATA1,@DATA2,@DATA3,@DATA4,@DATA5,@DATA6,@DATA7
				,@DATA8,@DATA9,@DATA10,@DATA11,@DATA12,@DATA13
				,@DATA14,@DATA15
			EXEC TA_GETDATATOINDEX @OPERATORNAME OUTPUT,@OPERATORNAME_INDEX
				,@DATA1,@DATA2,@DATA3,@DATA4,@DATA5,@DATA6,@DATA7
				,@DATA8,@DATA9,@DATA10,@DATA11,@DATA12,@DATA13
				,@DATA14,@DATA15
			EXEC TA_GETDATATOINDEX @OPERATEDATE OUTPUT,@OPERATEDATE_INDEX
				,@DATA1,@DATA2,@DATA3,@DATA4,@DATA5,@DATA6,@DATA7
				,@DATA8,@DATA9,@DATA10,@DATA11,@DATA12,@DATA13
				,@DATA14,@DATA15

			--将生成的数据保存到TA_BOKEFACE表中
			IF (convert(money,@TOTALMONEY)=0) AND (convert(money,@FOREINMONEY)=0) GOTO RELATIONNEXT

			IF (@FIRMCODE_INDEX<>0) AND LTRIM(RTRIM(@FIRMCODE))='' GOTO RELATIONNEXT

/*
			IF @MAX_ROWS=1 OR @ISSUM=0
			BEGIN
				IF @DIRECTION=1--插入借方
				BEGIN
					INSERT INTO TA_BOKEFACE (OPERATCODE,PRODUCEDATE,FLBH,ZFLBH,
						BRIEF,ACCOUNT,ACCOUNTNAME,BBJF,SLJF,WBJF,RATE,PRICE,
						SETTLENO,FIRMCODE,FIRMNAME,PROJECTCODE,PROJECTNAME,
						CORCODE,OPERATORCODE,OPERATORNAME,OPERATEDATE)
						VALUES
						(CONVERT(VARCHAR(6),@YW_CODE),@VOUCHER_DATE,CONVERT(VARCHAR(6),@FL_CODE),
						CONVERT(VARCHAR(6),@ZFL_CODE),@BRIEF,@ACCOUNT,@ACCOUNTNAME,
						@TOTALMONEY,@QUANTITY,@FOREINMONEY,@RATE,@PRICE,
						@SETTLENO,@FIRMCODE,@FIRMNAME,@PROJECTCODE,@PROJECTNAME,
						@CORCODE,@OPERATORCODE,@OPERATORNAME,@OPERATEDATE)
				end
				else
				begin
					INSERT INTO TA_BOKEFACE (OPERATCODE,PRODUCEDATE,FLBH,ZFLBH,
						BRIEF,ACCOUNT,ACCOUNTNAME,BBDF,SLDF,WBDF,RATE,PRICE,
						SETTLENO,FIRMCODE,FIRMNAME,PROJECTCODE,PROJECTNAME,
						CORCODE,OPERATORCODE,OPERATORNAME,OPERATEDATE)
						VALUES
						(CONVERT(VARCHAR(6),@YW_CODE),@VOUCHER_DATE,CONVERT(VARCHAR(6),@FL_CODE),
						CONVERT(VARCHAR(6),@ZFL_CODE),@BRIEF,@ACCOUNT,@ACCOUNTNAME,
						@TOTALMONEY,@QUANTITY,@FOREINMONEY,@RATE,@PRICE,
						@SETTLENO,@FIRMCODE,@FIRMNAME,@PROJECTCODE,@PROJECTNAME,
						@CORCODE,@OPERATORCODE,@OPERATORNAME,@OPERATEDATE)
				end
				SELECT @FL_CODE=@FL_CODE+1
			END
			ELSE
*/

			BEGIN
				--现在主要考虑往来户核算，所以这样处理
				if @FIRMCODE_INDEX<>0
				BEGIN
					SELECT @RETURN=COUNT(*),@ZFL_CODE=MAX(ZFLBH) FROM #TA_BOKEFACE
						WHERE OPERATCODE=CONVERT(VARCHAR(6),@YW_CODE) AND
						ACCOUNT=@ACCOUNT
						AND FIRMCODE=@FIRMCODE
					SELECT @ZFL_CODE=CONVERT(INT,ISNULL(MAX(ZFLBH),'0')),
						@FL_ZFL=CONVERT(INT,ISNULL(MAX(FLBH),'0'))
					 FROM #TA_BOKEFACE WHERE
						OPERATCODE=CONVERT(VARCHAR(6),@YW_CODE) AND 
						ACCOUNT=@ACCOUNT
				END
				ELSE
				BEGIN
					SELECT @RETURN=COUNT(*) FROM #TA_BOKEFACE
						WHERE OPERATCODE=CONVERT(VARCHAR(6),@YW_CODE) AND
						ACCOUNT=@ACCOUNT
				END


	--for test
/*				INSERT TA_LOG (OPERATIONID,HAPPENDATE,OPERATOR,MEMO) VALUES (@FIRMCODE_INDEX,GETDATE(),
				1,'ACCOUNT=' + @ACCOUNT+'OPERATCODE='+CONVERT(VARCHAR(6),@YW_CODE)
				+'FIRMCODE='+@FIRMCODE+'RETURN='+CONVERT(VARCHAR(6),@RETURN))
*/


				If @RETURN<>0 
				BEGIN
					IF @FIRMCODE_INDEX=0 
					BEGIN
						IF @DIRECTION=1
						BEGIN
							UPDATE #TA_BOKEFACE SET 
								BBJF=CONVERT(VARCHAR(50),CONVERT(MONEY,BBJF)+
									CONVERT(MONEY,@TOTALMONEY)),
								SLJF=CONVERT(VARCHAR(50),CONVERT(MONEY,SLJF)+
									CONVERT(MONEY,@QUANTITY)),
								WBJF=CONVERT(VARCHAR(50),CONVERT(MONEY,WBJF)+
									CONVERT(MONEY,@FOREINMONEY))
							WHERE OPERATCODE=CONVERT(VARCHAR(6),@YW_CODE) AND
								ACCOUNT=@ACCOUNT 

						END
						ELSE
						BEGIN
							UPDATE #TA_BOKEFACE SET 
								BBDF=CONVERT(VARCHAR(50),CONVERT(MONEY,BBDF)+
									CONVERT(MONEY,@TOTALMONEY)),
								SLDF=CONVERT(VARCHAR(50),CONVERT(MONEY,SLDF)+
									CONVERT(MONEY,@QUANTITY)),
								WBDF=CONVERT(VARCHAR(50),CONVERT(MONEY,WBDF)+
									CONVERT(MONEY,@FOREINMONEY))
							WHERE OPERATCODE=CONVERT(VARCHAR(6),@YW_CODE) AND
								ACCOUNT=@ACCOUNT 

						END
					END
					ELSE
					BEGIN
						IF @DIRECTION=1
						BEGIN
							UPDATE #TA_BOKEFACE SET 
								BBJF=CONVERT(VARCHAR(50),CONVERT(MONEY,BBJF)+
									CONVERT(MONEY,@TOTALMONEY)),
								SLJF=CONVERT(VARCHAR(50),CONVERT(MONEY,SLJF)+
									CONVERT(MONEY,@QUANTITY)),
								WBJF=CONVERT(VARCHAR(50),CONVERT(MONEY,WBJF)+
									CONVERT(MONEY,@FOREINMONEY))
							WHERE OPERATCODE=CONVERT(VARCHAR(6),@YW_CODE) AND
								ACCOUNT=@ACCOUNT AND FIRMCODE=@FIRMCODE

						END
						ELSE
						BEGIN
							UPDATE #TA_BOKEFACE SET 
								BBDF=CONVERT(VARCHAR(50),CONVERT(MONEY,BBDF)+
									CONVERT(MONEY,@TOTALMONEY)),
								SLDF=CONVERT(VARCHAR(50),CONVERT(MONEY,SLDF)+
									CONVERT(MONEY,@QUANTITY)),
								WBDF=CONVERT(VARCHAR(50),CONVERT(MONEY,WBDF)+
									CONVERT(MONEY,@FOREINMONEY))
							WHERE OPERATCODE=CONVERT(VARCHAR(6),@YW_CODE) AND
								ACCOUNT=@ACCOUNT AND FIRMCODE=@FIRMCODE
						END

					END
				END
				ELSE
				BEGIN
				--插入新记录
					--计算应插入的分录序号
					select @TMP=convert(int,isnull(max(FLBH),'0')) FROM #TA_BOKEFACE 
						WHERE OPERATCODE=CONVERT(VARCHAR(6),@YW_CODE)
					IF @TMP=@FL_CODE
					BEGIN
						SELECT @FL_CODE=@FL_CODE+1
					END
					SELECT @ZFL_CODE=0
					Select @FL_ZFL=@FL_CODE
/*
无须考虑子分录编号
					IF @FIRMCODE_INDEX=0
					BEGIN

						SELECT @FL_ZFL=@FL_CODE
					END
					ELSE
					BEGIN
						SELECT @ZFL_CODE=@ZFL_CODE+1
						IF @FL_ZFL=0 
						BEGIN
							SELECT @FL_ZFL=@FL_CODE
						END
					END
*/

					IF @DIRECTION=1--插入借方
					BEGIN
						INSERT INTO #TA_BOKEFACE (OPERATCODE,PRODUCEDATE,FLBH,ZFLBH,
							BRIEF,ACCOUNT,ACCOUNTNAME,BBJF,SLJF,WBJF,RATE,PRICE,
							SETTLENO,FIRMCODE,FIRMNAME,PROJECTCODE,PROJECTNAME,
							CORCODE,OPERATORCODE,OPERATORNAME,OPERATEDATE)
							VALUES
							(CONVERT(VARCHAR(6),@YW_CODE),@VOUCHER_DATE,CONVERT(VARCHAR(6),@FL_ZFL),
							CONVERT(VARCHAR(6),@ZFL_CODE),@BRIEF,@ACCOUNT,@ACCOUNTNAME,
							@TOTALMONEY,@QUANTITY,@FOREINMONEY,@RATE,@PRICE,
							@SETTLENO,@FIRMCODE,@FIRMNAME,@PROJECTCODE,@PROJECTNAME,
							@CORCODE,@OPERATORCODE,@OPERATORNAME,@OPERATEDATE)
					end
					else
					begin
						INSERT INTO #TA_BOKEFACE (OPERATCODE,PRODUCEDATE,FLBH,ZFLBH,
							BRIEF,ACCOUNT,ACCOUNTNAME,BBDF,SLDF,WBDF,RATE,PRICE,
							SETTLENO,FIRMCODE,FIRMNAME,PROJECTCODE,PROJECTNAME,
							CORCODE,OPERATORCODE,OPERATORNAME,OPERATEDATE)
							VALUES
							(CONVERT(VARCHAR(6),@YW_CODE),@VOUCHER_DATE,CONVERT(VARCHAR(6),@FL_ZFL),
							CONVERT(VARCHAR(6),@ZFL_CODE),@BRIEF,@ACCOUNT,@ACCOUNTNAME,
							@TOTALMONEY,@QUANTITY,@FOREINMONEY,@RATE,@PRICE,
							@SETTLENO,@FIRMCODE,@FIRMNAME,@PROJECTCODE,@PROJECTNAME,
							@CORCODE,@OPERATORCODE,@OPERATORNAME,@OPERATEDATE)
					end

					IF @ZFL_CODE=0 --如果没有子分录，则分录编号加一
					BEGIN
						SELECT @FL_CODE=@FL_CODE+1
					END

				END
			END

RELATIONNEXT:
			FETCH NEXT FROM CUR_RELATION INTO @RELATIONID,@DIRECTION,@ACCOUNT_INDEX,@ACCOUNTNAME_INDEX,@BRIEF_INDEX,
				@TOTALMONEY_INDEX,@QUANTITY_INDEX,@PRICE_INDEX,@CASHCODE_INDEX,@FOREINMONEY_INDEX,
				@RATE_INDEX,@SETTLENO_INDEX,@FIRMCODE_INDEX,@FIRMNAME_INDEX,@CORCODE_INDEX,
				@PROJECTCODE_INDEX,@PROJECTNAME_INDEX,@OPERATORCODE_INDEX,@OPERATORNAME_INDEX,
				@OPERATEDATE_INDEX,@ISSUM
		END
		SELECT @YW_ROWCOUNT=@YW_ROWCOUNT+1
LOOPNEXT:
		FETCH NEXT FROM CUR_GETVOUCHER INTO @DATA1,@DATA2,@DATA3,@DATA4,@DATA5,@DATA6
			,@DATA7,@DATA8,@DATA9,@DATA10,@DATA11,@DATA12,@DATA13,@DATA14,@DATA15
		
	END

	--修改最后一张凭证的附件数
	UPDATE #TA_BOKEFACE SET
		ADDNUM=CONVERT(VARCHAR(4),@TMP_ADDNUM)
	WHERE CONVERT(INT,OPERATCODE)=@YW_CODE

	CLOSE CUR_RELATION
	DEALLOCATE CUR_RELATION
	SELECT @IS_ERR=''
END_SP:
	CLOSE CUR_GETVOUCHER
	DEALLOCATE CUR_GETVOUCHER
	RETURN (0)



GO
