SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
CREATE PROCEDURE [dbo].[STKINFIFOCHK]
	@PI_CLS CHAR(10),
	@PI_NUM CHAR(10),
	@PI_LINE INT,
	@PI_WRH INT,
        @PI_SRCNUM CHAR(10),
	@PI_GDGID INT,
	@PI_QTY MONEY,
	@PI_PRICE MONEY OUTPUT,
	@PI_TOTAL MONEY OUTPUT,
	@PI_TAX MONEY OUTPUT,
	@PI_ERRMSG VARCHAR(200) OUTPUT
AS
BEGIN
	DECLARE @COST MONEY,@AMT MONEY,@NEWSUBWRH INT
		,@SUBWRH INT
		,@NEWPRC MONEY,@NEWTOTAL MONEY,@NEWTAX MONEY
	DECLARE @QTY MONEY, @INPRC MONEY, @CODE CHAR(10)

	DECLARE @RETURN_STATUS INT

        IF @PI_QTY < 0
        BEGIN
		SELECT @PI_ERRMSG = '先进先出方式下不能负数进货。'
		RETURN -1
	END


	IF @PI_CLS = '配货'
	BEGIN
		/*为后台零售单产生，考虑到平进平出，不入批次库存*/
		IF EXISTS (SELECT 1 FROM STKIN WHERE CLS = @PI_CLS AND NUM = @PI_NUM AND GENBILL = 'RTL' AND GENNUM IS NOT NULL)
                BEGIN
			/*将批次信息生成到SUBWRH中*/
			DECLARE CUR_STKINDTL CURSOR
				FOR SELECT SUBWRH,QTY,COST FROM STKINDTL2
					WHERE CLS = @PI_CLS AND NUM = @PI_NUM AND LINE = @PI_LINE 
			OPEN CUR_STKINDTL
			FETCH NEXT FROM CUR_STKINDTL INTO @SUBWRH,@QTY,@COST
			WHILE @@FETCH_STATUS = 0
			BEGIN
				SELECT @INPRC = @COST / @QTY

				SELECT @RETURN_STATUS = 0
				EXEC @RETURN_STATUS = INSSUBWRHBATCH_2  @PI_GDGID, @SUBWRH, @CODE OUTPUT, @INPRC OUTPUT,
					  @PI_ERRMSG OUTPUT
				
				IF @RETURN_STATUS <> 0 BREAK

				FETCH NEXT FROM CUR_STKINDTL INTO @SUBWRH,@QTY,@COST
			END
			CLOSE CUR_STKINDTL
			DEALLOCATE CUR_STKINDTL
                 

			RETURN 0
                 END
	END

		
	EXEC CLEARTEMPSUBWRH @PI_GDGID,@PI_WRH

	IF EXISTS(SELECT 1 FROM STKINDTL2 WHERE CLS= @PI_CLS AND NUM = @PI_NUM AND LINE = @PI_LINE)
	BEGIN
		INSERT INTO TEMPSUBWRH(SPID,WRH,SUBWRH,GDGID,QTY,COST,BILL,CLS,NUM,LINE)
			SELECT @@SPID,WRH,SUBWRH,GDGID,QTY,COST,'STKOUT','配货',@PI_SRCNUM,@PI_LINE FROM STKINDTL2
				WHERE CLS = @PI_CLS AND NUM = @PI_NUM AND LINE = @PI_LINE 
	END
	ELSE
	BEGIN
		--兼容使用的指定批次记录在STKINDTL中的情况
		SELECT @SUBWRH =ISNULL(SUBWRH,0) FROM STKINDTL WHERE CLS = @PI_CLS AND NUM = @PI_NUM AND LINE = @PI_LINE 
		IF @SUBWRH <> 0
		BEGIN
			INSERT INTO TEMPSUBWRH(SPID,WRH,SUBWRH,GDGID,QTY,COST)
				VALUES(@@SPID,@PI_WRH,@SUBWRH,@PI_GDGID,@PI_QTY,@PI_TOTAL)
		END
	END

	EXEC @RETURN_STATUS = LOADINSUBWRH_2 @PI_GDGID,@PI_WRH,@PI_QTY,@PI_TOTAL
        
	
	IF @RETURN_STATUS <> 0 RETURN @RETURN_STATUS

	DELETE FROM STKINDTL2 WHERE CLS = @PI_CLS AND NUM = @PI_NUM AND LINE = @PI_LINE

	INSERT INTO STKINDTL2(CLS,NUM,LINE,SUBWRH,WRH,GDGID,QTY,COST,COSTADJ)
		SELECT @PI_CLS,@PI_NUM,@PI_LINE,SUBWRH,WRH,GDGID,QTY,COST,COSTADJ FROM TEMPSUBWRH 
			WHERE SPID = @@SPID AND GDGID = @PI_GDGID AND WRH = @PI_WRH

	SELECT @NEWSUBWRH= MIN(SUBWRH),@NEWTOTAL = SUM(COST) FROM TEMPSUBWRH WHERE SPID = @@SPID AND WRH = @PI_WRH AND GDGID = @PI_GDGID

	IF @NEWTOTAL <> @PI_TOTAL
	BEGIN
		SELECT @NEWPRC = @NEWTOTAL / @PI_QTY

		SELECT @NEWTAX = @NEWTOTAL - (@NEWTOTAL)/(1 + TAXRATE/100) FROM GOODSH WHERE GID = @PI_GDGID
	
		UPDATE STKINDTL SET SUBWRH = @NEWSUBWRH,TAX = @NEWTAX,PRICE = @NEWPRC, TOTAL = @NEWTOTAL
			WHERE CLS = @PI_CLS AND NUM = @PI_NUM AND LINE = @PI_LINE

		UPDATE STKIN SET TAX = TAX + (@NEWTAX - @PI_TAX),TOTAL = TOTAL + (@NEWTOTAL - @PI_TOTAL)
			WHERE CLS = @PI_CLS AND NUM = @PI_NUM

		SELECT @PI_TAX = @NEWTAX,@PI_TOTAL = @NEWTOTAL

	END
	ELSE
	BEGIN
		UPDATE STKINDTL SET SUBWRH = @NEWSUBWRH
			WHERE CLS = @PI_CLS AND NUM = @PI_NUM AND LINE = @PI_LINE

	END

	EXEC CLEARTEMPSUBWRH @PI_GDGID,@PI_WRH
	RETURN 0

END
GO
