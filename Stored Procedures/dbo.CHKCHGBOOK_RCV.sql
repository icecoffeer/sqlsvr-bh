SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
CREATE PROCEDURE [dbo].[CHKCHGBOOK_RCV](
  @BILL_ID INT,
  @SRC_ID INT,
  @OPER VARCHAR(50),
  @MSG VARCHAR(255) OUTPUT
) AS
BEGIN
  DECLARE @RCV_GID INT
  DECLARE @NET_STAT INT
  DECLARE @NET_NUM VARCHAR(14)
  DECLARE @NET_MODNUM VARCHAR(14)
  DECLARE @NET_TYPE INT
  DECLARE @VRET INT
  DECLARE @STAT INT
  DECLARE @NET_VENDOR INT
  DECLARE @NET_CHGCODE VARCHAR(10)
  DECLARE @NET_NOTE VARCHAR(255)
  DECLARE @BILL_ID1 INT
  DECLARE @SRC_ID1 INT
  DECLARE @CFLAG INT
  
  SELECT @RCV_GID = RCV, @NET_STAT = STAT, @NET_TYPE = NTYPE, @NET_NUM = NUM, @NET_MODNUM = ISNULL(MODNUM, ''),
    @NET_VENDOR = VENDOR, @NET_CHGCODE = CHGCODE, @NET_NOTE = NOTE, @CFLAG = CFLAG, @NET_STAT = STAT
  FROM NCHGBOOK(NOLOCK) WHERE ID = @BILL_ID AND SRC = @SRC_ID
  IF @@ROWCOUNT = 0 OR @NET_NUM IS NULL
  BEGIN
    SET @MSG = '[接收]单据' +  @NET_NUM + '不存在'
    RETURN 1
  END
  
  IF @NET_MODNUM <> '' and @NET_STAT = 500
  BEGIN
    SELECT @BILL_ID1 = ID, @SRC_ID1 = SRC FROM NCHGBOOK(NOLOCK) WHERE NUM = @NET_MODNUM ORDER BY ID DESC
    IF @@ROWCOUNT = 0
    BEGIN
      SET @MSG = '[接收]单据' +  @NET_NUM + '修正链不完整'
      RETURN 2
    END
    EXEC @VRET = CHKCHGBOOK_RCV @BILL_ID1, @SRC_ID1, @OPER, @MSG OUTPUT
	IF @VRET > 0 RETURN @VRET
  END
  
  /*IF EXISTS(SELECT 1 FROM CHGBOOK(NOLOCK) WHERE NUM = @NET_NUM AND STAT = @NET_STAT)
  BEGIN
    SET @MSG = '[接收]单据' +  @NET_NUM + '已经被接收'
    RETURN 3
  END*/

  IF (SELECT MAX(USERGID) FROM FASYSTEM(NOLOCK)) <>  @RCV_GID
  BEGIN
    SET @MSG = '[接收]单据' +  @NET_NUM + '接收单位不是本单位'
    RETURN 4
  END

  IF @NET_TYPE <> 1
  BEGIN
    SET @MSG = '[接收]单据' +  @NET_NUM + '不在接收缓冲区中'
    RETURN 5
  END
  
  IF NOT EXISTS(SELECT 1 FROM VENDOR(NOLOCK) WHERE GID = @NET_VENDOR)
  BEGIN
    SET @MSG = '[接收]单据' +  @NET_NUM + '供应商在本地不存在'
    RETURN 6
  END
  
  IF NOT EXISTS(SELECT 1 FROM CTCHGDEF(NOLOCK) WHERE CODE = @NET_CHGCODE)
  BEGIN
    SET @MSG = '[接收]单据' +  @NET_NUM + '帐款项目在本地不存在'
    RETURN 7
  END
  
  IF @CFLAG = 0
  BEGIN
   if exists (select 1 from CHGBOOK where NUM = @NET_NUM and STAT >= 500) --如果单据已存在就不需要再接收了
   begin
     EXEC @VRET = CHKCHGBOOK_NETDELETE @BILL_ID, @SRC_ID, @OPER, @MSG OUTPUT
     IF @VRET <> 0 RETURN @VRET
   end
   else
   begin
    DELETE FROM CHGBOOK WHERE NUM = @NET_NUM
  
    IF @NET_STAT = 500 SET @STAT = 0
    IF @NET_STAT = 530 AND @NET_MODNUM = '' SET @STAT = 500
    IF @NET_STAT = 530 AND @NET_MODNUM <> '' SET @STAT = 0
    IF @NET_STAT = 510 SET @STAT = 500
    IF @NET_STAT = 300 SET @STAT = 300
    INSERT INTO CHGBOOK(NUM, VENDOR, CNTRNUM, CHGCODE, CalcTotal, CalcRate, SHOULDAMT, 
      REALAMT, OCRDATE, SIGNDATE, SIGNER, FILDATE, FILLER, CHKDATE, CHECKER, SETTLENO, 
      STAT, NOTE, CALCBEGIN, CALCEND, FIXNOTE, BTYPE, SRCNUM, SRCCLS, PRNTIME, MODNUM, 
      LSTUPDTIME, BILLTO, GATHERINGMODE, ACCOUNTTERM, PAYTOTAL, DEPT, PAYDIRECT, 
      PAYDATE, PSR, CNTRVERSION, GENDATE, STORE, ABOLISHRESON, TAXRATE, PAYUNIT, 
      STSTORE, SNDTIME, SRC, CASHCENTER)
    SELECT NUM, VENDOR, CNTRNUM, CHGCODE, CalcTotal, CalcRate, SHOULDAMT, 
      REALAMT, OCRDATE, SIGNDATE, SIGNER, FILDATE, FILLER, CHKDATE, CHECKER, SETTLENO, 
      @STAT, NOTE, CALCBEGIN, CALCEND, FIXNOTE, BTYPE, SRCNUM, SRCCLS, PRNTIME, MODNUM, 
      LSTUPDTIME, BILLTO, GATHERINGMODE, ACCOUNTTERM, PAYTOTAL, DEPT, PAYDIRECT, 
      PAYDATE, PSR, CNTRVERSION, GENDATE, STORE, ABOLISHRESON, TAXRATE, PAYUNIT, 
      STSTORE, NULL, SRC, CASHCENTER
    FROM NCHGBOOK(NOLOCK)
     WHERE SRC = @SRC_ID AND ID = @BILL_ID
   end
  END ELSE
  BEGIN
    DECLARE @LSTUPDTIME DATETIME
    DECLARE @PAYTOTAL MONEY
    DECLARE @SIGNDATE DATETIME
    DECLARE @SIGNER VARCHAR(50)
    DECLARE @CNSTAT INT
    
    if exists (select 1 from chgbook(nolock) where num = @NET_NUM)
    begin
     SELECT @LSTUPDTIME = LSTUPDTIME, @PAYTOTAL = PAYTOTAL, @SIGNDATE = SIGNDATE,
       @SIGNER = SIGNER, @CNSTAT = STAT
     FROM NCHGBOOK(NOLOCK)
      WHERE ID = @BILL_ID AND SRC = @SRC_ID
     
     UPDATE CHGBOOK SET
       LSTUPDTIME = @LSTUPDTIME,
       PAYTOTAL = @PAYTOTAL,
       SIGNDATE = @SIGNDATE,
       SIGNER = @SIGNER,
       STAT = @CNSTAT
     WHERE NUM = @NET_NUM
    end
    else  --结算中心修改产生的新单据
    begin
     IF @NET_STAT = 500 SET @STAT = 0
     IF @NET_STAT = 530 AND @NET_MODNUM = '' SET @STAT = 500
     IF @NET_STAT = 530 AND @NET_MODNUM <> '' SET @STAT = 0
     IF @NET_STAT = 510 SET @STAT = 500
     IF @NET_STAT = 300 SET @STAT = 300
     INSERT INTO CHGBOOK(NUM, VENDOR, CNTRNUM, CHGCODE, CalcTotal, CalcRate, SHOULDAMT,
      REALAMT, OCRDATE, SIGNDATE, SIGNER, FILDATE, FILLER, CHKDATE, CHECKER, SETTLENO,
      STAT, NOTE, CALCBEGIN, CALCEND, FIXNOTE, BTYPE, SRCNUM, SRCCLS, PRNTIME, MODNUM,
      LSTUPDTIME, BILLTO, GATHERINGMODE, ACCOUNTTERM, PAYTOTAL, DEPT, PAYDIRECT,
      PAYDATE, PSR, CNTRVERSION, GENDATE, STORE, ABOLISHRESON, TAXRATE, PAYUNIT,
      STSTORE, SNDTIME, SRC, CASHCENTER)
     SELECT NUM, VENDOR, CNTRNUM, CHGCODE, CalcTotal, CalcRate, SHOULDAMT,
      REALAMT, OCRDATE, SIGNDATE, SIGNER, FILDATE, FILLER, CHKDATE, CHECKER, SETTLENO,
      @STAT, NOTE, CALCBEGIN, CALCEND, FIXNOTE, BTYPE, SRCNUM, SRCCLS, PRNTIME, MODNUM,
      LSTUPDTIME, BILLTO, GATHERINGMODE, ACCOUNTTERM, PAYTOTAL, DEPT, PAYDIRECT,
      PAYDATE, PSR, CNTRVERSION, GENDATE, STORE, ABOLISHRESON, TAXRATE, PAYUNIT,
      STSTORE, NULL, SRC, CASHCENTER
     FROM NCHGBOOK(NOLOCK)
     WHERE SRC = @SRC_ID AND ID = @BILL_ID
    end
  END
  EXEC @VRET = CHKCHGBOOK_NETDELETE @BILL_ID, @SRC_ID, @OPER, @MSG OUTPUT
  IF @VRET <> 0 RETURN @VRET
  
  IF @NET_STAT = 500 AND @NET_MODNUM = ''
    EXEC @VRET = CHGBOOKCHK @NET_NUM, @OPER, 'NOSEND', 500, @MSG OUTPUT
  ELSE IF @NET_STAT = 510
    EXEC @VRET = CHGBOOKDLT @NET_NUM, @OPER, 'NOSEND', 510, @MSG OUTPUT
  ELSE IF @NET_STAT = 500 AND @NET_MODNUM <> ''
    EXEC @VRET = CHGBOOKUPD @NET_NUM, @OPER, 'NOSEND', 530, @MSG OUTPUT
  ELSE IF @NET_STAT = 530 AND @NET_MODNUM <> ''
    EXEC @VRET = CHGBOOKUPD @NET_NUM, @OPER, 'NOSEND', 530, @MSG OUTPUT
  IF @VRET <> 0 RETURN @VRET
  
  UPDATE CHGBOOK SET NOTE = @NET_NOTE WHERE NUM = @NET_NUM
    
  SET @MSG = '单据：' + @NET_NUM + '接收成功' + @MSG
  
  RETURN 0
END
GO
