SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
CREATE PROCEDURE [dbo].[VDRPAY_RCV](
  @BILL_ID INT,
  @SRC_ID INT,
  @OPER VARCHAR(50),
  @MSG VARCHAR(255) OUTPUT
) AS
BEGIN
  DECLARE @RCV_GID INT
  DECLARE @NET_STAT INT
  DECLARE @NET_NUM VARCHAR(14)
  DECLARE @NET_MODNUM VARCHAR(14)
  DECLARE @NET_TYPE INT
  DECLARE @VRET INT
  DECLARE @STAT INT
  DECLARE @BUPD SMALLINT
  DECLARE @CHGNUM VARCHAR(14)
  DECLARE @BILL_ID1 INT
  DECLARE @SRC_ID1 INT
  DECLARE @BILL_ID2 INT
  DECLARE @SRC_ID2 INT  
  
  SELECT @RCV_GID = RCV, @NET_STAT = STAT, @NET_TYPE = NTYPE, @NET_NUM = NUM, @NET_MODNUM = ISNULL(MODNUM, '')
  FROM NVDRPAY(NOLOCK) WHERE ID = @BILL_ID AND SRC = @SRC_ID
  IF @@ROWCOUNT = 0 OR @NET_NUM IS NULL
  BEGIN
    SET @MSG = '[接收]单据' +  @NET_NUM + '不存在'
    RETURN 1
  END
  
  IF @NET_MODNUM <> '' AND @NET_STAT = 500
  BEGIN
    SELECT @BILL_ID1 = ID, @SRC_ID1 = SRC FROM NVDRPAY(NOLOCK) WHERE NUM = @NET_MODNUM ORDER BY ID DESC
    IF @@ROWCOUNT = 0
    BEGIN
      SET @MSG = '[接收]单据' +  @NET_NUM + '修正链不完整'
      RETURN 2
    END
    EXEC @VRET = VDRPAY_RCV @BILL_ID1, @SRC_ID1, @OPER, @MSG OUTPUT
	IF @VRET > 0 RETURN @VRET
  END
  
  IF EXISTS(SELECT 1 FROM VDRPAY(NOLOCK) WHERE NUM = @NET_NUM AND STAT = @NET_STAT)
  BEGIN
    SET @MSG = '[接收]单据' +  @NET_NUM + '已经被接收'
    RETURN 3
  END

  IF (SELECT MAX(USERGID) FROM FASYSTEM(NOLOCK)) <>  @RCV_GID
  BEGIN
    SET @MSG = '[接收]单据' +  @NET_NUM + '接收单位不是本单位'
    RETURN 4
  END

  IF @NET_TYPE <> 1
  BEGIN
    SET @MSG = '[接收]单据' +  @NET_NUM + '不在接收缓冲区中'
    RETURN 5
  END
  
  DELETE FROM VDRPAY WHERE NUM = @NET_NUM
  DELETE FROM VDRPAYDTL WHERE NUM = @NET_NUM
  
  DECLARE C CURSOR LOCAL FOR SELECT CHGNUM FROM NVDRPAYDTL(NOLOCK) WHERE SRC = @SRC_ID AND ID = @BILL_ID
  OPEN C
  FETCH NEXT FROM C INTO @CHGNUM
  WHILE @@FETCH_STATUS = 0
  BEGIN
    SELECT @SRC_ID2 = SRC, @BILL_ID2 = ID FROM NCHGBOOK(NOLOCK) WHERE NUM = @CHGNUM ORDER BY ID DESC
    DELETE FROM NCHGBOOK WHERE NUM = @CHGNUM AND NOT (SRC = @SRC_ID2 AND ID = @BILL_ID2)
    
    EXEC @VRET = CHKCHGBOOK_RCV @BILL_ID2, @SRC_ID2, @OPER, @MSG OUTPUT
    IF @VRET > 1 RETURN @VRET
    FETCH NEXT FROM C INTO @CHGNUM
  END
  CLOSE C
  DEALLOCATE C
  
  IF @NET_STAT = 500 SET @STAT = 0
  IF @NET_STAT = 510 SET @STAT = 500
  INSERT INTO VDRPAY(NUM, SETTLENO, FILDATE, FILLER, ACNTER, NOTE, STAT, PRNTIME, PAYTOTAL, 
    MODNUM, VGID, LSTUPDTIME, SETTLEACCOUNTNO, DEPT, ABOLISHRESON, STSTORE, SNDTIME, SRC)
  SELECT NUM, SETTLENO, FILDATE, FILLER, ACNTER, NOTE, @STAT, PRNTIME, PAYTOTAL,
    MODNUM, VGID, LSTUPDTIME, SETTLEACCOUNTNO, DEPT, ABOLISHRESON, STSTORE, SNDTIME, SRC
  FROM NVDRPAY(NOLOCK)
  WHERE SRC = @SRC_ID AND ID = @BILL_ID
  
  INSERT INTO VDRPAYDTL(NUM, LINE, CHGNUM, SHOULDPAY, REALPAY, PAYTOTAL, NOPAYTOTAL, NOTE)
  SELECT NUM, LINE, CHGNUM, SHOULDPAY, REALPAY, PAYTOTAL, NOPAYTOTAL, NOTE
  FROM NVDRPAYDTL(NOLOCK)
  WHERE SRC = @SRC_ID AND ID = @BILL_ID
  
  SELECT 1 FROM NVDRPAY(NOLOCK) WHERE MODNUM = @NET_NUM AND STAT = 500
  IF @@ROWCOUNT = 0 SET @BUPD = 1
  ELSE SET @BUPD = 0
  
  EXEC @VRET = VDRPAY_NETDELETE @BILL_ID, @SRC_ID, @OPER, @MSG OUTPUT
  IF @VRET <> 0 RETURN @VRET
  
  IF @NET_STAT = 500 AND @NET_MODNUM = ''
    EXEC @VRET = VDRPAYCHK 'NOSEND', @NET_NUM, @OPER, 500, @MSG OUTPUT
  IF @NET_STAT = 500 AND @NET_MODNUM <> ''
    EXEC @VRET = VDRPAYUPD 'NOSEND', @NET_NUM, @OPER, 500, @MSG OUTPUT
  IF @NET_STAT = 510 AND @BUPD = 0
    EXEC @VRET = VDRPAYDLT 'NOSEND', @NET_NUM, @OPER, 510, @MSG OUTPUT
  IF @VRET <> 0 RETURN @VRET
    
  SET @MSG = '单据：' + @NET_NUM + '接收成功' + @MSG
  
  RETURN 0
END
GO
