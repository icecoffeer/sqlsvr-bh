SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
CREATE PROCEDURE [dbo].[UNLOADSUBWRH_2]
  @PI_GDGID INT,
  @PI_WRH INT,
  @PI_QTY INT,
  @PI_COST MONEY OUTPUT
AS
BEGIN

  DECLARE @SUBWRH INT, @CODE CHAR(10), @TQTY MONEY,@TCOST MONEY
  DECLARE @QTY MONEY,@COST MONEY
  DECLARE @DEFPRICE MONEY

  DECLARE @RETURN INT
  DECLARE @ERR VARCHAR(200)

  SELECT @QTY = @PI_QTY,@COST = 0

  DECLARE CUR_UNLOADSUBWRH CURSOR
	FOR SELECT SUBWRH,CODE,QTY FROM SUBWRHINV WHERE WRH = @PI_WRH AND GDGID = @PI_GDGID AND QTY > 0
		ORDER BY CODE

  OPEN CUR_UNLOADSUBWRH
  FETCH NEXT FROM CUR_UNLOADSUBWRH INTO @SUBWRH,@CODE,@TQTY
  WHILE @@FETCH_STATUS = 0
  BEGIN
	SELECT @TCOST = 0
	IF @TQTY > @QTY 
	BEGIN
		SELECT @TQTY = @QTY
	END
	EXEC @RETURN = SIMPLEUNLOADSUBWRH_2  @PI_GDGID,@PI_WRH,@SUBWRH,@CODE,@TQTY,@TCOST OUTPUT
	IF @RETURN <> 0
	BEGIN
		CLOSE CUR_UNLOADSUBWRH
		DEALLOCATE CUR_UNLOADSUBWRH
		RETURN @RETURN
	END
	SELECT @QTY = @QTY - @TQTY, @COST = @COST + @TCOST

        DELETE FROM TEMPSUBWRH WHERE SPID = @@SPID AND GDGID = @PI_GDGID AND WRH = @PI_WRH AND SUBWRH = @SUBWRH 
	INSERT INTO TEMPSUBWRH(SPID,WRH,SUBWRH,GDGID,QTY,COST) 
		VALUES(@@SPID,@PI_WRH,@SUBWRH,@PI_GDGID,@TQTY,@TCOST)
	
	IF @QTY = 0 BREAK

	FETCH NEXT FROM CUR_UNLOADSUBWRH INTO @SUBWRH,@CODE,@TQTY
  END
  CLOSE CUR_UNLOADSUBWRH
  DEALLOCATE CUR_UNLOADSUBWRH

  SELECT @PI_COST = @COST

  IF @QTY = 0 RETURN 0

  --没有匹配完成的商品按负数批次考虑

  SELECT @SUBWRH = SUBWRH,@CODE = @CODE FROM SUBWRHINV WHERE WRH = @PI_WRH AND GDGID = @PI_GDGID AND QTY < 0

  IF @@ROWCOUNT <> 0 
  BEGIN
	SELECT @TCOST = 0

	EXEC @RETURN = SIMPLEUNLOADSUBWRH_2  @PI_GDGID,@PI_WRH,@SUBWRH,@CODE,@QTY,@TCOST OUTPUT
	IF @RETURN <> 0
	BEGIN
		CLOSE CUR_UNLOADSUBWRH
		DEALLOCATE CUR_UNLOADSUBWRH
		RETURN @RETURN
	END
	SELECT @PI_COST = @PI_COST + @TCOST
	INSERT INTO TEMPSUBWRH(SPID,WRH,SUBWRH,GDGID,QTY,COST) 
		VALUES(@@SPID,@PI_WRH,@SUBWRH,@PI_GDGID,@QTY,@TCOST)

  END
  ELSE
  BEGIN
	SELECT @TCOST = 0
	EXEC GETFIFODEFINPRC @PI_GDGID,@DEFPRICE OUTPUT
	EXEC GETSUBWRHBATCH_2 @PI_GDGID,@DEFPRICE,@SUBWRH OUTPUT,@CODE OUTPUT,@ERR OUTPUT

	IF RTRIM(ISNULL(@ERR,'')) <> '' 
	BEGIN
		RAISERROR( @ERR, 16, 1)
		RETURN 11
	END

	EXEC @RETURN = SIMPLEUNLOADSUBWRH_2  @PI_GDGID,@PI_WRH,@SUBWRH,@CODE,@QTY,@TCOST OUTPUT

	UPDATE SUBWRH SET INPRC = @TCOST / @QTY,LSTUPDTIME=GETDATE()
               WHERE GID=@SUBWRH

	IF @RETURN <> 0
	BEGIN
		CLOSE CUR_UNLOADSUBWRH
		DEALLOCATE CUR_UNLOADSUBWRH
		RETURN @RETURN
	END
	SELECT @PI_COST = @PI_COST + @TCOST
	INSERT INTO TEMPSUBWRH(SPID,WRH,SUBWRH,GDGID,QTY,COST) 
		VALUES(@@SPID,@PI_WRH,@SUBWRH,@PI_GDGID,@QTY,@TCOST)

  END

END
GO
