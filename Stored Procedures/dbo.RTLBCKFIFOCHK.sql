SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
CREATE PROCEDURE [dbo].[RTLBCKFIFOCHK]
	@PI_STYLE SMALLINT,
	@PI_NUM CHAR(10),
	@PI_LINE SMALLINT,
	@PI_WRH INT,
	@PI_GDGID INT,
	@PI_QTY MONEY,
	@PI_COSTPRC MONEY,
	@PI_COST MONEY OUTPUT,
	@PI_ERRMSG VARCHAR(200) OUTPUT
AS
BEGIN
	DECLARE @NEWSUBWRH INT
	DECLARE @RETURN_STATUS INT,@OPTVALUE INT
	DECLARE @LOADMODE INT
	DECLARE @AllBalanceInOut INT
	IF @PI_STYLE = 1
		SELECT @LOADMODE = 0
	ELSE
		SELECT @LOADMODE = 1/*此时不能处理负数批次库存*/

	IF @PI_QTY < 0
	BEGIN
		SELECT @PI_ERRMSG = '先进先出不能负数退货'
		RETURN 1014
	END

	EXEC CLEARTEMPSUBWRH @PI_GDGID,@PI_WRH


	SELECT @RETURN_STATUS = 0
	SELECT @PI_COST = ROUND(@PI_QTY * @PI_COSTPRC,2)

	EXEC @RETURN_STATUS = LOADINSUBWRH_2 @PI_GDGID,@PI_WRH,@PI_QTY,@PI_COST,@LOADMODE

	IF @RETURN_STATUS <> 0 RETURN @RETURN_STATUS

	INSERT INTO RTLBCKDTL2(NUM,LINE,SUBWRH,WRH,GDGID,QTY,COST,COSTADJ)
		SELECT @PI_NUM,@PI_LINE,SUBWRH,WRH,GDGID,QTY,COST,COSTADJ FROM TEMPSUBWRH
			WHERE SPID = @@SPID AND GDGID = @PI_GDGID AND WRH = @PI_WRH

	SELECT @NEWSUBWRH= MIN(SUBWRH) FROM TEMPSUBWRH WHERE SPID = @@SPID AND WRH = @PI_WRH AND GDGID = @PI_GDGID

  exec optreadint 0, '开启全局进出货成本平进平出', 0, @AllBalanceInOut output  --2005.08.02
	EXEC OPTREADINT 0, 'FrcAlcInBckPrc', 0, @OPTVALUE OUTPUT
	IF @AllBalanceInOut = 1 AND @OPTVALUE = 0
	  SET @OPTVALUE = 1
	IF @OPTVALUE = 1
		UPDATE RTLBCKDTL SET SUBWRH = @NEWSUBWRH,COST = @PI_COST,ALCPRC = COSTPRC
			WHERE  NUM = @PI_NUM AND LINE = @PI_LINE
	ELSE
		UPDATE RTLBCKDTL SET SUBWRH = @NEWSUBWRH,COST = @PI_COST
			WHERE  NUM = @PI_NUM AND LINE = @PI_LINE

	EXEC CLEARTEMPSUBWRH @PI_GDGID,@PI_WRH
	RETURN 0

END
GO
